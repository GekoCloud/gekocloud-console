"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Icon = _interopRequireDefault(require("../Icon"));

var _Button = _interopRequireDefault(require("../Button/Button"));

var _Transition = _interopRequireDefault(require("../Transition/Transition"));

var Alert =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(Alert, _Component);

  function Alert() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, Alert);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Alert)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "state", {
      closing: true,
      closed: false
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleClose", function (e) {
      e.preventDefault();
      var onClose = _this.props.onClose;

      var dom = _reactDom.default.findDOMNode((0, _assertThisInitialized2.default)(_this));

      dom.style.height = "".concat(dom.offsetHeight, "px"); // magic code

      dom.style.height = "".concat(dom.offsetHeight, "px");

      _this.setState({
        closing: false
      });

      if (onClose) {
        onClose();
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "animationEnd", function () {
      var afterClose = _this.props.afterClose;

      _this.setState({
        closed: true,
        closing: true
      });

      if (afterClose) {
        afterClose();
      }
    });
    return _this;
  }

  (0, _createClass2.default)(Alert, [{
    key: "render",
    value: function render() {
      var _classNames;

      var _this$props = this.props,
          closable = _this$props.closable,
          description = _this$props.description,
          type = _this$props.type,
          prefixCls = _this$props.prefixCls,
          message = _this$props.message,
          showIcon = _this$props.showIcon,
          className = _this$props.className,
          style = _this$props.style,
          linkBtn = _this$props.linkBtn;
      var _this$state = this.state,
          closing = _this$state.closing,
          closed = _this$state.closed;
      var alertCls = (0, _classnames.default)(prefixCls, (_classNames = {}, (0, _defineProperty2.default)(_classNames, "".concat(prefixCls, "-").concat(type), true), (0, _defineProperty2.default)(_classNames, "".concat(prefixCls, "-close"), !closing), (0, _defineProperty2.default)(_classNames, "".concat(prefixCls, "-with-description"), !!description), (0, _defineProperty2.default)(_classNames, "".concat(prefixCls, "-no-icon"), !showIcon), (0, _defineProperty2.default)(_classNames, "".concat(prefixCls, "-with-closable"), !!closable), _classNames), className);
      var linkButton = linkBtn ? _react.default.cloneElement(linkBtn, {
        className: "".concat(prefixCls, "-link-button"),
        type: 'text'
      }) : null;
      var closeIcon = closable ? _react.default.createElement(_Button.default, {
        type: "text",
        onClick: this.handleClose,
        className: "".concat(prefixCls, "-close-icon")
      }, _react.default.createElement(_Icon.default, {
        name: "close",
        size: 16
      })) : null;
      return closed ? null : _react.default.createElement(_Transition.default, {
        visible: closing,
        animation: "slide down",
        onHide: this.animationEnd,
        duration: 300
      }, _react.default.createElement("div", {
        className: alertCls,
        style: style
      }, showIcon ? _react.default.createElement("span", {
        className: "".concat(prefixCls, "-icon icon icon-").concat(type)
      }) : null, _react.default.createElement("div", {
        className: "".concat(prefixCls, "-content")
      }, _react.default.createElement("span", {
        className: "".concat(prefixCls, "-message")
      }, message), _react.default.createElement("span", {
        className: "".concat(prefixCls, "-description")
      }, description), closable ? linkButton : null), _react.default.createElement("div", {
        className: "".concat(prefixCls, "-right")
      }, closable ? closeIcon : linkButton)));
    }
  }]);
  return Alert;
}(_react.Component);

(0, _defineProperty2.default)(Alert, "propTypes", {
  type: _propTypes.default.oneOf(['success', 'info', 'warning', 'error']),
  closable: _propTypes.default.bool,
  linkBtn: _propTypes.default.node,
  message: _propTypes.default.node,
  description: _propTypes.default.node,
  onClose: _propTypes.default.func,
  afterClose: _propTypes.default.func,
  showIcon: _propTypes.default.bool,
  style: _propTypes.default.object,
  prefixCls: _propTypes.default.string,
  className: _propTypes.default.string
});
(0, _defineProperty2.default)(Alert, "defaultProps", {
  type: 'warning',
  closable: false,
  showIcon: true,
  prefixCls: 'alert'
});
var _default = Alert;
exports.default = _default;