"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _reactTestRenderer = _interopRequireDefault(require("react-test-renderer"));

var _react2 = require("@testing-library/react");

var _AutoComplete = _interopRequireDefault(require("./AutoComplete"));

var noop = function noop() {};

var OSVersions = [{
  value: 'CentOS-5.8',
  label: 'CentOS 5.8 32bit'
}, {
  value: 'CentOS-6.6',
  label: 'CentOS 6.6 64bit'
}, {
  value: 'CentOS-6.8',
  label: 'CentOS 6.8 64bit'
}, {
  value: 'CentOS-7.1',
  label: 'CentOS 7.1 64bit'
}, {
  value: 'CentOS-7.2',
  label: 'CentOS 7.2 64bit'
}, {
  value: 'CentOS-7.3',
  label: 'CentOS 7.3 64bit'
}, {
  value: 'CentOS-7.4',
  label: 'CentOS 7.4 64bit'
}, {
  value: 'Debian-8.1',
  label: 'Debian Jessie 8.1 64bit'
}, {
  value: 'Debian-8.3',
  label: 'Debian Jessie 8.3 64bit'
}, {
  value: 'Debian-8.7',
  label: 'Debian Jessie 8.7 64bit'
}, {
  value: 'Debian-9.1',
  label: 'Debian Stretch 9.1 64bit'
}, {
  value: 'Debian-9.3',
  label: 'Debian Stretch 9.3 64bit'
}, {
  value: 'Debian-7.5',
  label: 'Debian Wheezy 7.5 64bit'
}, {
  value: 'Debian-7.9',
  label: 'Debian Wheezy 7.9 64bit'
}, {
  value: 'Ubuntu-14.04.4',
  label: 'Ubuntu Server 14.04.4 LTS 64bit'
}, {
  value: 'Ubuntu-14.04.5',
  label: 'Ubuntu Server 14.04.5 LTS 64bit'
}, {
  value: 'Ubuntu-16.04.2',
  label: 'Ubuntu Server 16.04.2 LTS 64bit'
}, {
  value: 'Ubuntu-16.04.3',
  label: 'Ubuntu Server 16.04.3 LTS 64bit'
}, {
  value: 'Ubuntu-16.04.4',
  label: 'Ubuntu Server 16.04.4 LTS 64bit'
}, {
  value: 'Ubuntu-18.04',
  label: 'Ubuntu Server 18.04 LTS 64bit'
}, {
  value: 'Fedora-18-32',
  label: 'Fedora 18 32bit'
}, {
  value: 'Fedora-18-64',
  label: 'Fedora 18 64bit'
}, {
  value: 'Fedora-20-64',
  label: 'Fedora 20 64bit'
}, {
  value: 'Fedora-22-64',
  label: 'Fedora 22 64bit'
}, {
  value: 'Fedora-24-64',
  label: 'Fedora 24 64bit'
}, {
  value: 'openSUSE-12.3',
  label: 'openSUSE 12.3 64bit'
}, {
  value: 'Arch-2013',
  label: 'Arch Linux 2013.10 64bit'
}, {
  value: 'Arch-2016',
  label: 'Arch Linux 2016.09 64bit'
}, {
  value: 'Windows-2003-r2-32-zh',
  label: 'Windows Server 2003 R2 简体中文 企业版 32位'
}, {
  value: 'Windows-2008-r2-64-zh',
  label: 'Windows Server 2008 R2 简体中文 企业版 64位'
}, {
  value: 'Windows-2008-r2-64-en',
  label: 'Windows Server 2008 R2 英文 标准版 64位'
}, {
  value: 'Windows-2012-r2-64-zh',
  label: 'Windows Server 2012 R2 简体中文 标准版 64位'
}, {
  value: 'Windows-2012-r2-64-en',
  label: 'Windows Server 2012 R2 英文 标准版 64位'
}, {
  value: 'Windows-2016-64-zh',
  label: 'Windows Server 2016 简体中文 标准版 64位'
}, {
  value: 'Windows-2016-64-en',
  label: 'Windows Server 2016 英文 标准版 64位'
}];
var names = ['Simba', 'Nala', 'Sarabi', 'Zazu', 'Mufasa', 'Timon', 'Pumba', 'Rafiki', 'Scar', 'Shenzi', 'Banzai', 'Ed', 'Sarafina', 'Aladdin', 'Jasmine', 'Genie', 'Jafar', 'Iago', 'Abu', 'Magic Carpet', 'Sultan', 'Razoul', 'Rajah', 'Ariel', 'Prince Eric', 'Sebastian', 'Flounder', 'Ursula', 'King Triton', 'Scuttle', 'Flotsam and Jetsam', 'Grimsby', 'Max', 'Chef Louis', 'Carlotta', 'Ariels sisters', 'Belle', 'Beast', 'Gaston', 'Maurice', 'Lumière', 'Cogsworth', 'Mrs. Potts', 'Chip Potts', 'The Featherduster', 'The Wardrobe', 'Le Fou', 'Monsieur Arque', 'The Triplets', 'The Enchantress', 'Phillipe', 'Chef Bouche'];
it('render correctly', function () {
  var tree = _reactTestRenderer.default.create(_react.default.createElement(_AutoComplete.default, {
    disabled: true,
    prefixCls: "my-prefix",
    className: "my-classname",
    style: {
      display: 'block'
    },
    name: "my-autocomplete",
    id: "my-autocomplete",
    inputProps: {
      tabindex: '0'
    },
    value: "my-autocomplete",
    options: OSVersions,
    placeholder: "\u5C1D\u8BD5\u8F93\u5165 CentOS\uFF0CDebian\uFF0CUbuntu, Windows... ",
    onSelected: noop
  })).toJSON();

  expect(tree).toMatchSnapshot();
});
it('selector expands/closes correctly', function () {
  var handleOnSelected = jest.fn();

  var optionRenderer = function optionRenderer(option, highlighted) {
    return _react.default.createElement(_react.default.Fragment, null, highlighted, "@yunify.com");
  };

  var valueRenderer = function valueRenderer(result) {
    return "".concat(result, "@yunify.com");
  };

  var _render = (0, _react2.render)(_react.default.createElement(_AutoComplete.default, {
    options: names,
    onSelected: handleOnSelected,
    valueRenderer: valueRenderer,
    optionRenderer: optionRenderer,
    placeholder: "QUERY_IDENTIFIER"
  })),
      getByPlaceholderText = _render.getByPlaceholderText,
      getAllByText = _render.getAllByText,
      getByText = _render.getByText,
      queryAllByText = _render.queryAllByText;

  var input = getByPlaceholderText('QUERY_IDENTIFIER');

  _react2.fireEvent.change(input, {
    target: {
      value: 'Simba'
    }
  }); // todo
  // why have to call focus to show selector?


  input.focus(); // expect render autocomplete list

  getAllByText(/.*@yunify.com$/); // click on option, expect input value to be xxx@yunify.com and selector isn't visiable

  _react2.fireEvent.click(getByText('Simba'));

  expect(input.value).toBe('Simba@yunify.com');
  expect(queryAllByText(/.*@yunify.com$/)).toHaveLength(0);
  expect(handleOnSelected).toHaveBeenCalledWith('Simba', expect.anything());
});