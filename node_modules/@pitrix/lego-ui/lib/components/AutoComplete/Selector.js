"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _LocaleProvider = require("../LocaleProvider");

var _Option = _interopRequireDefault(require("./Option"));

var _Loading = _interopRequireDefault(require("../Loading"));

var Selector =
/*#__PURE__*/
function (_PureComponent) {
  (0, _inherits2.default)(Selector, _PureComponent);

  function Selector() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, Selector);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Selector)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleOnClick", function (result, event) {
      var onSelected = _this.props.onSelected;
      onSelected(result, event);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleHighlighted", function (matches) {
      var indices = matches.indices,
          value = matches.value;
      if (!indices.length === 0) return value;
      var Fragment = _react.default.Fragment;
      var nextIndex = 0;
      var content = indices.map(function (region) {
        var result = _react.default.createElement(Fragment, {
          key: nextIndex
        }, value.substring(nextIndex, region[0]), _react.default.createElement("abbr", {
          className: "highlight"
        }, value.substring(region[0], region[1] + 1)));

        nextIndex = region[1] + 1;
        return result;
      });
      return _react.default.createElement(Fragment, null, content, value.substring(nextIndex));
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "scrollToOption", function () {
      var $selector = _reactDom.default.findDOMNode(_this.selector);

      var $li = $selector.querySelector('.active');
      if (!$li) return;
      var scrollTop = $selector.scrollTop;
      var scrollBottom = scrollTop + $selector.offsetHeight;
      var optionTop = $li.offsetTop;
      var optionBottom = optionTop + $li.offsetHeight;

      if (scrollTop > optionTop || scrollBottom < optionBottom) {
        $selector.scrollTop = $li.offsetTop - 6;
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderOption", function (result) {
      var _this$props = _this.props,
          options = _this$props.options,
          highlighting = _this$props.highlighting,
          optionRenderer = _this$props.optionRenderer;
      var item = typeof result.item === 'number' ? options[result.item] : result.item;

      if (optionRenderer) {
        return optionRenderer(item, _this.handleHighlighted(result.matches[0]));
      }

      if (highlighting) {
        return _this.handleHighlighted(result.matches[0]);
      }

      return item.label || item;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderOptions", function () {
      var _this$props2 = _this.props,
          searchResults = _this$props2.searchResults,
          customValue = _this$props2.customValue,
          selectionIndex = _this$props2.selectionIndex,
          allowCustomValues = _this$props2.allowCustomValues,
          customClasses = _this$props2.customClasses,
          areResultsTruncated = _this$props2.areResultsTruncated,
          resultsTruncatedMessage = _this$props2.resultsTruncatedMessage,
          isLoading = _this$props2.isLoading,
          noResultsText = _this$props2.noResultsText,
          prefixCls = _this$props2.prefixCls;

      if (searchResults.length === 0 && !allowCustomValues && !isLoading) {
        return _react.default.createElement("li", {
          className: "".concat(prefixCls, "-no-results")
        }, noResultsText || _LocaleProvider.locale.get('NO_RESULTS_FOUND'));
      }

      if (isLoading) {
        return _react.default.createElement("li", {
          className: "".concat(prefixCls, "-loading")
        }, _react.default.createElement(_Loading.default, {
          size: 20
        }));
      }

      var customItem = null;
      var customValueOffset = 0;

      if (customValue !== null) {
        customValueOffset += 1;
        customItem = _react.default.createElement(_Option.default, {
          key: customValue,
          active: selectionIndex === 0,
          customClasses: customClasses,
          customValue: customValue,
          onClick: function onClick(event) {
            _this.handleOnClick(customValue, event);
          }
        }, customValue);
      }

      var results = searchResults.map(function (result, i) {
        var displayString = _this.renderOption(result);

        var uniqueKey = "option_".concat(i);
        var isActive = selectionIndex === i + customValueOffset;
        return _react.default.createElement(_Option.default, {
          key: uniqueKey,
          active: isActive,
          customClasses: customClasses,
          onClick: function onClick(event) {
            _this.handleOnClick(result, event);
          }
        }, displayString);
      }, (0, _assertThisInitialized2.default)(_this));

      if (areResultsTruncated && resultsTruncatedMessage !== null) {
        var truncated = _react.default.createElement("li", {
          key: "results-truncated",
          className: (0, _classnames.default)(customClasses.resultsTruncated, 'results-truncated')
        }, resultsTruncatedMessage);

        results.push(truncated);
      }

      return _react.default.createElement(_react.default.Fragment, null, customItem, results);
    });
    return _this;
  }

  (0, _createClass2.default)(Selector, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.scrollToOption();
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props3 = this.props,
          customClasses = _this$props3.customClasses,
          prefixCls = _this$props3.prefixCls;
      return _react.default.createElement("ul", {
        ref: function ref(n) {
          _this2.selector = n;
        },
        className: (0, _classnames.default)(customClasses.results, "".concat(prefixCls, "-selector"))
      }, this.renderOptions());
    }
  }]);
  return Selector;
}(_react.PureComponent);

(0, _defineProperty2.default)(Selector, "propTypes", {
  options: _propTypes.default.array,
  searchResults: _propTypes.default.array,
  allowCustomValues: _propTypes.default.bool,
  customClasses: _propTypes.default.object,
  customValue: _propTypes.default.string,
  selectionIndex: _propTypes.default.number,
  onSelected: _propTypes.default.func,
  areResultsTruncated: _propTypes.default.bool,
  resultsTruncatedMessage: _propTypes.default.string,
  highlighting: _propTypes.default.bool,
  isLoading: _propTypes.default.bool,
  noResultsText: _propTypes.default.string,
  prefixCls: _propTypes.default.string,
  optionRenderer: _propTypes.default.func
});
(0, _defineProperty2.default)(Selector, "defaultProps", {
  selectionIndex: null,
  options: [],
  searchResults: [],
  customClasses: {},
  allowCustomValues: false,
  customValue: null,
  onSelected: function onSelected() {}
});
var _default = Selector;
exports.default = _default;