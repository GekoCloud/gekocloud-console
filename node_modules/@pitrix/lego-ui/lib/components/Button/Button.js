"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _noop2 = _interopRequireDefault(require("lodash/noop"));

var _omit2 = _interopRequireDefault(require("lodash/omit"));

var _isFunction2 = _interopRequireDefault(require("lodash/isFunction"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Loading = _interopRequireDefault(require("../Loading"));

var Button =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(Button, _Component);

  function Button() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, Button);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Button)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleClick", function (e) {
      var _this$props = _this.props,
          disabled = _this$props.disabled,
          onClick = _this$props.onClick;
      var isDisabled = disabled;

      if ((0, _isFunction2.default)(disabled)) {
        isDisabled = disabled();
      }

      if (!isDisabled && (0, _isFunction2.default)(onClick)) {
        onClick(e);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "hideChildren", function (child) {
      if (!(child && typeof child === 'string')) {
        return _react.default.cloneElement(child, {
          style: Object.assign({}, child.props.style, {
            visibility: 'hidden'
          })
        });
      }

      return child;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "wrapString", function (child) {
      if (child && typeof child === 'string') {
        return _react.default.createElement("span", null, child);
      }

      return child;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "wrapChildren", function (children, loading) {
      var isNeedWrapper = _react.default.Children.count(children) > 1;
      var wrappedChildren = children;

      if (loading) {
        wrappedChildren = _react.default.Children.map(children, function (child) {
          return _this.hideChildren(child);
        });
      }

      if (isNeedWrapper && !loading) {
        wrappedChildren = _react.default.Children.map(children, function (child) {
          return _this.wrapString(child);
        });
      }

      return wrappedChildren;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "filterProps", function (restProps) {
      var href = restProps.href,
          disabled = restProps.disabled,
          htmlType = restProps.htmlType;
      var isDisabled = disabled;

      if ((0, _isFunction2.default)(disabled)) {
        isDisabled = disabled();
      }

      var omitProps = ['htmlType', 'onClick'];

      if (href) {
        omitProps.push('type', 'disabled');
      }

      return (0, _omit2.default)((0, _objectSpread2.default)({}, restProps, {
        disabled: isDisabled,
        type: htmlType
      }), omitProps);
    });
    return _this;
  }

  (0, _createClass2.default)(Button, [{
    key: "render",
    value: function render() {
      var _classNames;

      var _this$props2 = this.props,
          children = _this$props2.children,
          className = _this$props2.className,
          loading = _this$props2.loading,
          size = _this$props2.size,
          type = _this$props2.type,
          restProps = (0, _objectWithoutProperties2.default)(_this$props2, ["children", "className", "loading", "size", "type"]);
      var ComponentName = restProps.href ? 'a' : 'button';
      return _react.default.createElement(ComponentName, (0, _extends2.default)({}, this.filterProps(restProps), {
        className: (0, _classnames.default)('button', "is-".concat(type), (_classNames = {}, (0, _defineProperty2.default)(_classNames, "is-".concat(size), size !== 'default'), (0, _defineProperty2.default)(_classNames, 'is-loading', loading), _classNames), className),
        onClick: this.handleClick
      }), loading ? _react.default.createElement(_Loading.default, {
        className: "loading-wrapper"
      }) : null, this.wrapChildren(children, loading));
    }
  }]);
  return Button;
}(_react.Component);

(0, _defineProperty2.default)(Button, "propTypes", {
  href: _propTypes.default.string,
  target: _propTypes.default.string,
  type: _propTypes.default.string,
  className: _propTypes.default.string,
  style: _propTypes.default.object,
  loading: _propTypes.default.bool,
  disabled: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.func]),
  size: _propTypes.default.oneOf(['small', 'default', 'large']),
  onClick: _propTypes.default.func,
  htmlType: _propTypes.default.string,
  children: _propTypes.default.node
});
(0, _defineProperty2.default)(Button, "defaultProps", {
  size: 'default',
  type: 'default',
  htmlType: 'button',
  style: {},
  onClick: _noop2.default,
  disabled: false
});
var _default = Button;
exports.default = _default;