"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _isEqual2 = _interopRequireDefault(require("lodash/isEqual"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _shallowEqual = _interopRequireDefault(require("../../utils/shallowEqual"));

var Checkbox =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(Checkbox, _Component);

  function Checkbox(props) {
    var _this;

    (0, _classCallCheck2.default)(this, Checkbox);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Checkbox).call(this, props));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleChange", function (e) {
      var _this$props = _this.props,
          disabled = _this$props.disabled,
          onChange = _this$props.onChange;
      var checkboxGroup = _this.context.checkboxGroup;
      var checked = e.target.checked;
      if (disabled) return;

      if (!('checked' in _this.props)) {
        _this.setState({
          checked: checked
        });
      }

      var params = {
        target: (0, _objectSpread2.default)({}, _this.props, {
          checked: checked
        }),
        stopPropagation: function stopPropagation() {
          e.stopPropagation();
        },
        preventDefault: function preventDefault() {
          e.preventDefault();
        },
        nativeEvent: e.nativeEvent
      };

      if (checkboxGroup) {
        checkboxGroup.onChange(params);
        return;
      }

      if (onChange) {
        onChange(params, checked);
      }
    });
    _this.state = {
      checked: props.checked || props.defaultChecked
    };
    return _this;
  }

  (0, _createClass2.default)(Checkbox, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps, nextState, nextContext) {
      var checkboxGroup = this.context.checkboxGroup;
      return !(0, _shallowEqual.default)(this.props, nextProps) || !(0, _shallowEqual.default)(this.state, nextState) || !(0, _shallowEqual.default)(checkboxGroup, nextContext.checkboxGroup);
    }
  }, {
    key: "focus",
    value: function focus() {
      this.checkbox.focus();
    }
  }, {
    key: "blur",
    value: function blur() {
      this.checkbox.blur();
    }
  }, {
    key: "render",
    value: function render() {
      var _classNames,
          _this2 = this;

      var props = this.props,
          context = this.context;
      var prefixCls = props.prefixCls,
          className = props.className,
          children = props.children,
          style = props.style,
          defaultChecked = props.defaultChecked,
          indeterminate = props.indeterminate,
          onChange = props.onChange,
          restProps = (0, _objectWithoutProperties2.default)(props, ["prefixCls", "className", "children", "style", "defaultChecked", "indeterminate", "onChange"]);
      var checked = this.state.checked;
      var checkboxGroup = context.checkboxGroup;
      var CheckboxPorps = (0, _objectSpread2.default)({}, restProps);

      if (checkboxGroup) {
        CheckboxPorps.name = checkboxGroup.name;
        var value = checkboxGroup.value;
        CheckboxPorps.checked = value.filter(function (item) {
          return (0, _isEqual2.default)(item, props.value);
        }).length > 0;
        CheckboxPorps.disabled = props.disabled || checkboxGroup.disabled;
      } else {
        CheckboxPorps.checked = checked;
      }

      var wrapperClassString = (0, _classnames.default)(className, (_classNames = {}, (0, _defineProperty2.default)(_classNames, "".concat(prefixCls, "-wrapper"), true), (0, _defineProperty2.default)(_classNames, "".concat(prefixCls, "-wrapper-checked"), CheckboxPorps.checked), (0, _defineProperty2.default)(_classNames, "".concat(prefixCls, "-wrapper-disabled"), CheckboxPorps.disabled), _classNames));
      return _react.default.createElement("label", {
        className: (0, _classnames.default)(prefixCls, wrapperClassString, {
          checked: CheckboxPorps.checked,
          disabled: CheckboxPorps.disabled,
          indeterminate: indeterminate
        }, className),
        style: style
      }, _react.default.createElement("input", (0, _extends2.default)({
        type: "checkbox",
        onChange: this.handleChange
      }, CheckboxPorps, {
        ref: function ref(n) {
          _this2.checkbox = n;
        }
      })), children ? _react.default.createElement("span", {
        className: "label-value"
      }, children) : null);
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, prevState) {
      if ('checked' in nextProps && nextProps.checked !== prevState.checked) {
        return {
          checked: nextProps.checked
        };
      }

      return null;
    }
  }]);
  return Checkbox;
}(_react.Component);

(0, _defineProperty2.default)(Checkbox, "propTypes", {
  name: _propTypes.default.string,
  disabled: _propTypes.default.bool,
  defaultChecked: _propTypes.default.bool,
  checked: _propTypes.default.bool,
  prefixCls: _propTypes.default.string,
  indeterminate: _propTypes.default.bool,
  className: _propTypes.default.string,
  style: _propTypes.default.object,
  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number, _propTypes.default.bool, _propTypes.default.object, _propTypes.default.array]),
  children: _propTypes.default.node,
  onChange: _propTypes.default.func
});
(0, _defineProperty2.default)(Checkbox, "contextTypes", {
  checkboxGroup: _propTypes.default.any
});
(0, _defineProperty2.default)(Checkbox, "defaultProps", {
  defaultChecked: false,
  indeterminate: false,
  prefixCls: 'checkbox'
});
var _default = Checkbox;
exports.default = _default;