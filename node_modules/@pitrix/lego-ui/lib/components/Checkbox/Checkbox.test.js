"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _reactTestRenderer = _interopRequireDefault(require("react-test-renderer"));

var _react2 = require("@testing-library/react");

var _Checkbox = _interopRequireDefault(require("./Checkbox"));

it('renders correctly', function () {
  var tree = _reactTestRenderer.default.create(_react.default.createElement(_Checkbox.default, {
    disabled: true,
    defaultChecked: true,
    checked: true,
    indeterminate: true,
    name: "my-checkbox",
    prefixCls: "my-classname-prefix",
    className: "my-classname",
    style: {
      backgroundColor: 'cadetblue'
    },
    value: "your-checkbox-value"
  }, _react.default.createElement("span", null, "foo bar"))).toJSON();

  expect(tree).toMatchSnapshot();
});
it('called onChange after click', function () {
  var mockFn = jest.fn();
  var testId = 'called-checkbox';

  var _render = (0, _react2.render)(_react.default.createElement(_Checkbox.default, {
    "data-testid": testId,
    name: "my-checkbox",
    prefixCls: "my-classname-prefix",
    className: "my-classname",
    style: {
      backgroundColor: 'cadetblue'
    },
    value: "your-checkbox-value",
    onChange: mockFn
  }, _react.default.createElement("span", null, "foo bar"))),
      getByTestId = _render.getByTestId;

  var checkbox = getByTestId(testId);

  _react2.fireEvent.click(checkbox);

  expect(mockFn).toBeCalledWith(expect.objectContaining({
    target: expect.objectContaining({
      checked: true
    })
  }), true);
});
it('not called when disabled', function () {
  var mockFn = jest.fn();
  var testId = 'not-called-checkbox';

  var _render2 = (0, _react2.render)(_react.default.createElement(_Checkbox.default, {
    disabled: true,
    "data-testid": testId,
    name: "my-checkbox",
    prefixCls: "my-classname-prefix",
    className: "my-classname",
    style: {
      backgroundColor: 'cadetblue'
    },
    value: "your-checkbox-value",
    onChange: mockFn
  }, _react.default.createElement("span", null, "foo bar"))),
      getByTestId = _render2.getByTestId;

  var checkbox = getByTestId(testId);

  _react2.fireEvent.click(checkbox);

  expect(mockFn).not.toHaveBeenCalled();
});