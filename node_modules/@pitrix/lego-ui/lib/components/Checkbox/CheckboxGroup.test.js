"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _reactTestRenderer = _interopRequireDefault(require("react-test-renderer"));

var _react2 = require("@testing-library/react");

var _Checkbox = _interopRequireDefault(require("./Checkbox"));

var _CheckboxGroup = _interopRequireDefault(require("./CheckboxGroup"));

it('renders correctly by nesting Checkbox component', function () {
  var tree = _reactTestRenderer.default.create(_react.default.createElement(_CheckboxGroup.default, {
    className: "my-checkbox-group",
    wrapClassName: "no-wrap-classname",
    prefixCls: "no-prefix-classname",
    style: {
      backgroundColor: 'cadetblue'
    },
    name: "states",
    defaultValue: [3]
  }, _react.default.createElement(_Checkbox.default, {
    value: 1
  }, "Windows"), _react.default.createElement(_Checkbox.default, {
    value: 2
  }, "Linux"), _react.default.createElement(_Checkbox.default, {
    value: 3
  }, "MacOS"), _react.default.createElement(_Checkbox.default, {
    value: 4
  }, "UNIX"))).toJSON();

  expect(tree).toMatchSnapshot();
});
it('renders correctly by options', function () {
  var options = [{
    label: '中国',
    value: 'China'
  }, {
    label: '巴西',
    value: 'Brazil',
    disabled: true
  }, {
    label: '俄罗斯',
    value: 'Russian'
  }, {
    label: '南非',
    value: 'South Africa'
  }, {
    label: '印度',
    value: 'Indian'
  }];

  var tree = _reactTestRenderer.default.create(_react.default.createElement(_CheckboxGroup.default, {
    className: "my-checkbox-group",
    wrapClassName: "no-wrap-classname",
    prefixCls: "no-prefix-classname",
    style: {
      backgroundColor: 'cadetblue'
    },
    name: "states",
    options: options,
    defaultValue: ['China']
  })).toJSON();

  expect(tree).toMatchSnapshot();
});
it('called onChange after click', function () {
  var mockFn = jest.fn();
  var testId = 'called-checkbox-group';
  var name = 'checkbox-group-name';

  var _render = (0, _react2.render)(_react.default.createElement(_CheckboxGroup.default, {
    name: name,
    defaultValue: [3],
    onChange: mockFn
  }, _react.default.createElement(_Checkbox.default, {
    value: 1
  }, "Windows"), _react.default.createElement(_Checkbox.default, {
    value: 2
  }, "Linux"), _react.default.createElement(_Checkbox.default, {
    "data-testid": testId,
    value: 3
  }, "MacOS"), _react.default.createElement(_Checkbox.default, {
    value: 4
  }, "UNIX"))),
      getByTestId = _render.getByTestId;

  var checkbox = getByTestId(testId);

  _react2.fireEvent.click(checkbox);

  expect(mockFn).toBeCalledWith([], name);
});