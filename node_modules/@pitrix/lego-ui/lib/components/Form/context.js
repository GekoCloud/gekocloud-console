"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.withFormContext = exports.FormContext = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _noop2 = _interopRequireDefault(require("lodash/noop"));

var _react = _interopRequireDefault(require("react"));

/* eslint-disable react/prefer-stateless-function */

/* eslint-disable react/jsx-filename-extension */
var FormContext = _react.default.createContext({
  Model: {
    /* name: value */
  },
  Schemas: {
    /* name: schemas */
  },
  SchemaErrors: {
    /* name: schema */
  },
  CustomErrors: {
    /* name: schema */
  },
  initFormModel: _noop2.default,
  setFormModel: _noop2.default,
  deleteFormModel: _noop2.default,
  setFormSchemas: _noop2.default,
  setCustomErrors: _noop2.default,
  getFormModel: _noop2.default,
  getFieldError: _noop2.default,
  validateFormField: _noop2.default
});

exports.FormContext = FormContext;

var withFormContext = function withFormContext(Component) {
  return (
    /*#__PURE__*/
    function (_React$Component) {
      (0, _inherits2.default)(ContextField, _React$Component);

      function ContextField() {
        (0, _classCallCheck2.default)(this, ContextField);
        return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ContextField).apply(this, arguments));
      }

      (0, _createClass2.default)(ContextField, [{
        key: "getControlRef",
        value: function getControlRef() {
          return this.fieldRef.getControlRef();
        }
      }, {
        key: "render",
        value: function render() {
          var _this = this;

          return _react.default.createElement(FormContext.Consumer, null, function (context) {
            return _react.default.createElement(Component, (0, _extends2.default)({}, _this.props, {
              context: context,
              ref: function ref(n) {
                _this.fieldRef = n;
              }
            }));
          });
        }
      }]);
      return ContextField;
    }(_react.default.Component)
  );
};

exports.withFormContext = withFormContext;