"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _includes2 = _interopRequireDefault(require("lodash/includes"));

var _remove2 = _interopRequireDefault(require("lodash/remove"));

var _isFunction2 = _interopRequireDefault(require("lodash/isFunction"));

var _get2 = _interopRequireDefault(require("lodash/get"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames2 = _interopRequireDefault(require("classnames"));

var _Icon = _interopRequireDefault(require("../Icon"));

var _Radio = require("../Radio");

var _Checkbox = require("../Checkbox");

var _constants = require("./constants");

var TableRow =
/*#__PURE__*/
function (_React$Component) {
  (0, _inherits2.default)(TableRow, _React$Component);

  function TableRow() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, TableRow);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(TableRow)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "state", {
      expandedKeys: [],
      isRowExpanded: false
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onChangeRadio", function (e, row) {
      var _this$props = _this.props,
          rowKey = _this$props.rowKey,
          onSelect = _this$props.onSelect;

      if (e.target.checked) {
        onSelect([row[rowKey]], [row]);
      } else {
        onSelect([], []);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onChangeCheckbox", function (e, checked, row) {
      var _this$props2 = _this.props,
          selectedRowKeys = _this$props2.selectedRowKeys,
          rowKey = _this$props2.rowKey,
          dataSource = _this$props2.dataSource,
          onSelect = _this$props2.onSelect;
      var selectedKeys = [];

      if (checked) {
        selectedKeys = selectedRowKeys.concat([row[rowKey]]);
      } else {
        selectedKeys = selectedRowKeys.filter(function (key) {
          return key !== row[rowKey];
        });
      }

      var selectedRows = dataSource.filter(function (item) {
        return selectedKeys.indexOf(item[rowKey]) > -1;
      });
      onSelect(selectedKeys, selectedRows);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onClickExpandIcon", function (key, expanded) {
      var _this$props3 = _this.props,
          expandedRowKeys = _this$props3.expandedRowKeys,
          onExpand = _this$props3.onExpand;
      var expandedKeys = _this.state.expandedKeys;

      if (expanded) {
        expandedKeys.push(key);
      } else {
        (0, _remove2.default)(expandedKeys, function (k) {
          return key === k;
        });
      }

      _this.setState({
        expandedKeys: expandedKeys,
        isRowExpanded: expanded
      }, function () {
        if (expandedRowKeys) {
          onExpand(expandedKeys);
        }
      });
    });
    return _this;
  }

  (0, _createClass2.default)(TableRow, [{
    key: "renderSelect",
    value: function renderSelect(checked, key) {
      var _this2 = this;

      var _this$props4 = this.props,
          selectType = _this$props4.selectType,
          row = _this$props4.row,
          disabledRowKeys = _this$props4.disabledRowKeys;

      if (!selectType) {
        return null;
      }

      var disabled = disabledRowKeys.indexOf(key) > -1;

      if (selectType === 'radio') {
        return _react.default.createElement(_Radio.Radio, {
          checked: checked,
          disabled: disabled,
          onChange: function onChange(e) {
            return _this2.onChangeRadio(e, row);
          }
        });
      }

      return _react.default.createElement(_Checkbox.Checkbox, {
        checked: checked,
        disabled: disabled,
        onChange: function onChange(e, isCheck) {
          return _this2.onChangeCheckbox(e, isCheck, row);
        }
      });
    }
  }, {
    key: "renderExpandIcon",
    value: function renderExpandIcon(col, key) {
      var _this3 = this;

      var isRowExpanded = this.state.isRowExpanded;
      var icons = col.icons;
      var name = isRowExpanded ? icons[1] : icons[0];
      return _react.default.createElement(_Icon.default, {
        name: name,
        size: 24,
        changeable: true,
        clickable: true,
        onClick: function onClick() {
          return _this3.onClickExpandIcon(key, !isRowExpanded);
        }
      });
    }
  }, {
    key: "renderExpandRow",
    value: function renderExpandRow(row, key) {
      var expandedRowRender = this.props.expandedRowRender;
      var expandedKeys = this.state.expandedKeys;

      if (!(0, _isFunction2.default)(expandedRowRender) || expandedKeys.indexOf(key) === -1) {
        return null;
      }

      return _react.default.createElement("div", {
        className: "table-expand-row"
      }, expandedRowRender(row));
    }
  }, {
    key: "render",
    value: function render() {
      var _this4 = this;

      var _this$props5 = this.props,
          row = _this$props5.row,
          rowKey = _this$props5.rowKey,
          rowClassName = _this$props5.rowClassName,
          columns = _this$props5.columns,
          gridTemplateColumns = _this$props5.gridTemplateColumns,
          selectedRowKeys = _this$props5.selectedRowKeys;
      var isRowExpanded = this.state.isRowExpanded;
      var checked = selectedRowKeys.indexOf(row[rowKey]) > -1;
      return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement("div", {
        className: (0, _classnames2.default)('table-row', rowClassName, {
          'table-row-selected': checked,
          'table-row-expanded': isRowExpanded
        }),
        style: {
          gridTemplateColumns: gridTemplateColumns
        }
      }, columns.map(function (col, index) {
        var _classnames;

        var key = col.key,
            dataIndex = col.dataIndex,
            render = col.render,
            className = col.className,
            fixed = col.fixed,
            align = col.align;
        var style = fixed ? (0, _defineProperty2.default)({}, fixed, col[fixed]) : {};
        var value = (0, _get2.default)(row, dataIndex);
        return _react.default.createElement("div", {
          className: (0, _classnames2.default)('table-col', className, (_classnames = {}, (0, _defineProperty2.default)(_classnames, "table-col-fixed-".concat(fixed), fixed), (0, _defineProperty2.default)(_classnames, "table-col-align-".concat(align), align), (0, _defineProperty2.default)(_classnames, 'table-icon', (0, _includes2.default)(_constants.DEFAULT_COLUMNS_KEYS, key)), _classnames)),
          key: "".concat(row[rowKey], "_").concat(key || dataIndex),
          style: style
        }, key === _constants.SELECT_COLUMN && _this4.renderSelect(checked, row[rowKey]), key === _constants.EXPAND_COLUMN && _this4.renderExpandIcon(col, row[rowKey]), (0, _isFunction2.default)(render) ? render(value, row, index) : value);
      })), this.renderExpandRow(row, row[rowKey]));
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps) {
      var defaultExpandedRowKeys = nextProps.defaultExpandedRowKeys,
          expandedRowKeys = nextProps.expandedRowKeys,
          row = nextProps.row,
          rowKey = nextProps.rowKey;
      var expandedKeys = expandedRowKeys || defaultExpandedRowKeys || [];
      var isRowExpanded = expandedKeys.indexOf(row[rowKey]) > -1;
      return {
        expandedKeys: expandedKeys,
        isRowExpanded: isRowExpanded
      };
    }
  }]);
  return TableRow;
}(_react.default.Component);

exports.default = TableRow;
(0, _defineProperty2.default)(TableRow, "propTypes", {
  rowKey: _propTypes.default.string.isRequired,
  dataSource: _propTypes.default.array,
  columns: _propTypes.default.array,
  rowClassName: _propTypes.default.string,
  selectType: _propTypes.default.string,
  selectedRowKeys: _propTypes.default.array,
  disabledRowKeys: _propTypes.default.array,
  onSelect: _propTypes.default.func,
  expandedRowKeys: _propTypes.default.array,
  expandedRowRender: _propTypes.default.func,
  onExpand: _propTypes.default.func,
  row: _propTypes.default.object,
  gridTemplateColumns: _propTypes.default.string
});