"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _noop2 = _interopRequireDefault(require("lodash/noop"));

var _isNumber2 = _interopRequireDefault(require("lodash/isNumber"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _icons = _interopRequireDefault(require("../../assets/sprite/icons"));

var _domReady = _interopRequireDefault(require("../../utils/domReady"));

var prepend = function prepend(el, target) {
  if (target.firstChild) {
    target.insertBefore(el, target.firstChild);
  } else {
    target.appendChild(el);
  }
};

var appendSvg = function appendSvg() {
  var svgContainer = document.createElement('div');
  svgContainer.innerHTML = _icons.default;
  var svg = svgContainer.getElementsByTagName('svg')[0];

  if (svg) {
    svg.setAttribute('aria-hidden', 'true');
    svg.style.position = 'absolute';
    svg.style.width = 0;
    svg.style.height = 0;
    svg.style.overflow = 'hidden';
    prepend(svg, document.body);
  }
};

if (!window.iconfont__svg__inject) {
  window.iconfont__svg__inject = true;
  (0, _domReady.default)(appendSvg);
}

var Icon =
/*#__PURE__*/
function (_PureComponent) {
  (0, _inherits2.default)(Icon, _PureComponent);

  function Icon() {
    (0, _classCallCheck2.default)(this, Icon);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Icon).apply(this, arguments));
  }

  (0, _createClass2.default)(Icon, [{
    key: "render",
    value: function render() {
      var _classNames;

      var _this$props = this.props,
          prefix = _this$props.prefix,
          name = _this$props.name,
          type = _this$props.type,
          size = _this$props.size,
          className = _this$props.className,
          onClick = _this$props.onClick,
          style = _this$props.style,
          clickable = _this$props.clickable,
          changeable = _this$props.changeable,
          disabled = _this$props.disabled,
          color = _this$props.color;
      var styles = style;
      var colorStyles = {};

      if ((0, _isNumber2.default)(size)) {
        styles = Object.assign({}, style, {
          width: "".concat(size, "px"),
          height: "".concat(size, "px")
        });
      }

      if (color) {
        colorStyles = {
          color: color.primary,
          fill: color.secondary
        };
      }

      return _react.default.createElement("span", {
        style: styles,
        className: (0, _classnames.default)('icon', (_classNames = {}, (0, _defineProperty2.default)(_classNames, "is-".concat(size), !(0, _isNumber2.default)(size)), (0, _defineProperty2.default)(_classNames, 'icon-clickable', clickable), (0, _defineProperty2.default)(_classNames, 'icon-changeable', changeable && !disabled), (0, _defineProperty2.default)(_classNames, 'icon-disabled', disabled), _classNames), className),
        onClick: disabled ? _noop2.default : onClick
      }, _react.default.createElement("svg", {
        className: "".concat(prefix, " ").concat(prefix, "-").concat(name, " ").concat(prefix, "-").concat(type),
        style: colorStyles
      }, _react.default.createElement("use", {
        xlinkHref: "#".concat(name)
      })));
    }
  }]);
  return Icon;
}(_react.PureComponent);

(0, _defineProperty2.default)(Icon, "propTypes", {
  prefix: _propTypes.default.string,
  name: _propTypes.default.string.isRequired,
  type: _propTypes.default.string,
  size: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  className: _propTypes.default.string,
  style: _propTypes.default.object,
  changeable: _propTypes.default.bool,
  clickable: _propTypes.default.bool,
  onClick: _propTypes.default.func,
  disabled: _propTypes.default.bool,
  color: _propTypes.default.object
});
(0, _defineProperty2.default)(Icon, "defaultProps", {
  type: 'dark',
  size: 'small',
  prefix: 'qicon',
  style: {},
  changeable: false,
  clickable: false,
  disabled: false,
  onClick: _noop2.default
});
var _default = Icon;
exports.default = _default;