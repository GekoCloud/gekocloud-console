"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _isNumber2 = _interopRequireDefault(require("lodash/isNumber"));

var _isEqual2 = _interopRequireDefault(require("lodash/isEqual"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _mentionUtils = require("./mentionUtils");

var _Mention = _interopRequireDefault(require("./Mention"));

var Highlighter =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(Highlighter, _Component);

  function Highlighter() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, Highlighter);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Highlighter)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "state", {
      lastPosition: {}
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "generateComponentKey", function (usedKeys, id) {
      if (!Object.prototype.hasOwnProperty.call(usedKeys, id)) {
        Object.assign(usedKeys, (0, _defineProperty2.default)({}, id, 0));
      } else {
        Object.assign(usedKeys, (0, _defineProperty2.default)({}, id, usedKeys[id] + 1));
      }

      return "".concat(id, "_").concat(usedKeys[id]);
    });
    return _this;
  }

  (0, _createClass2.default)(Highlighter, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.notifyCaretPosition();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.notifyCaretPosition();
    }
  }, {
    key: "getMentionComponentForMatch",
    value: function getMentionComponentForMatch(id, display, type, key) {
      var children = this.props.children;

      var childrenCount = _react.Children.count(children);

      var props = {
        id: id,
        display: display,
        key: key
      };

      if (childrenCount > 1) {
        if (!type) {
          throw new Error('Since multiple Mention components have been passed as children, the markup has to define the __type__ placeholder');
        }

        var foundChild = null;

        _react.Children.forEach(children, function (child) {
          if (!child) {
            return;
          }

          if (child.props.type === type) {
            foundChild = child;
          }
        });

        return _react.default.cloneElement(foundChild, props);
      }

      if (childrenCount === 1) {
        var child = children.length ? children[0] : _react.Children.only(children);
        return _react.default.cloneElement(child, props);
      }

      return (0, _Mention.default)(props);
    }
  }, {
    key: "notifyCaretPosition",
    value: function notifyCaretPosition() {
      var onCaretPositionChange = this.props.onCaretPositionChange;

      if (!this.caretRef) {
        return;
      }

      var _this$caretRef = this.caretRef,
          offsetLeft = _this$caretRef.offsetLeft,
          offsetTop = _this$caretRef.offsetTop;
      var position = {
        left: offsetLeft,
        top: offsetTop
      };
      var lastPosition = this.state.lastPosition;

      if ((0, _isEqual2.default)(lastPosition, position)) {
        return;
      }

      this.setState({
        lastPosition: position
      });
      onCaretPositionChange(position);
    }
  }, {
    key: "renderHighlighterCaret",
    value: function renderHighlighterCaret(children) {
      var _this2 = this;

      var prefixCls = this.props.prefixCls;
      return _react.default.createElement("span", {
        className: "".concat(prefixCls, "-caret"),
        ref: function ref(el) {
          _this2.caretRef = el;
        },
        key: "caret"
      }, children);
    }
  }, {
    key: "renderSubstring",
    value: function renderSubstring(string, key) {
      var prefixCls = this.props.prefixCls;
      return _react.default.createElement("span", {
        className: "".concat(prefixCls, "-substring"),
        key: key
      }, string);
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var _this$props = this.props,
          selection = _this$props.selection,
          value = _this$props.value,
          markup = _this$props.markup,
          displayTransform = _this$props.displayTransform,
          regex = _this$props.regex,
          className = _this$props.className;
      var caretPositionInMarkup;

      if (selection.start === selection.end) {
        caretPositionInMarkup = (0, _mentionUtils.mapPlainTextIndex)(value, markup, selection.start, 'START', displayTransform, regex);
      }

      var resultComponents = [];
      var componentKeys = {};
      var components = resultComponents;
      var substringComponentKey = 0;

      var textIteratee = function textIteratee(substr, index) {
        if ((0, _isNumber2.default)(caretPositionInMarkup) && caretPositionInMarkup >= index && caretPositionInMarkup <= index + substr.length) {
          var splitIndex = caretPositionInMarkup - index;
          components.push(_this3.renderSubstring(substr.substring(0, splitIndex), substringComponentKey));
          components = [_this3.renderSubstring(substr.substring(splitIndex), substringComponentKey)];
        } else {
          components.push(_this3.renderSubstring(substr, substringComponentKey));
        }

        substringComponentKey += 1;
      };

      var mentionIteratee = function mentionIteratee(mark, index, indexInPlainText, id, display, type) {
        var key = _this3.generateComponentKey(componentKeys, id);

        components.push(_this3.getMentionComponentForMatch(id, display, type, key));
      };

      (0, _mentionUtils.iterateMentionsMarkup)(value, markup, textIteratee, mentionIteratee, displayTransform, regex);
      components.push(' ');

      if (components !== resultComponents) {
        resultComponents.push(this.renderHighlighterCaret(components));
      }

      return _react.default.createElement("div", {
        className: (0, _classnames.default)(className)
      }, resultComponents);
    }
  }]);
  return Highlighter;
}(_react.Component);

(0, _defineProperty2.default)(Highlighter, "propTypes", {
  selection: _propTypes.default.shape({
    start: _propTypes.default.number,
    end: _propTypes.default.number
  }).isRequired,
  markup: _propTypes.default.string.isRequired,
  value: _propTypes.default.string.isRequired,
  displayTransform: _propTypes.default.func.isRequired,
  onCaretPositionChange: _propTypes.default.func.isRequired,
  regex: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.instanceOf(RegExp)]),
  children: _propTypes.default.node,
  prefixCls: _propTypes.default.string,
  className: _propTypes.default.string
});
var _default = Highlighter;
exports.default = _default;