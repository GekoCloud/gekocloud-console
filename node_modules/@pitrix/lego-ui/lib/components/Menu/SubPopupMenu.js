"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _cloneMenuItem = _interopRequireDefault(require("./utils/cloneMenuItem"));

var PopupMenu =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(PopupMenu, _Component);

  function PopupMenu() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, PopupMenu);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(PopupMenu)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleClick", function (e, specKey, value) {
      var onClick = _this.props.onClick;
      onClick(e, specKey, value);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderSubMenuItems", function (component, index) {
      if (!component) {
        return null;
      }

      var _this$props = _this.props,
          specKey = _this$props.specKey,
          selectedKey = _this$props.selectedKey,
          selectedParentKeys = _this$props.selectedParentKeys,
          handleSelect = _this$props.handleSelect,
          parentKeys = _this$props.parentKeys;
      return (0, _cloneMenuItem.default)(component, index, specKey, {
        selectedKey: selectedKey,
        selectedParentKeys: selectedParentKeys,
        handleSelect: handleSelect,
        parentKeys: parentKeys.concat(specKey)
      }, _this.handleClick);
    });
    return _this;
  }

  (0, _createClass2.default)(PopupMenu, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          children = _this$props2.children,
          visible = _this$props2.visible,
          overlayClass = _this$props2.overlayClass,
          onPopupMenuClick = _this$props2.onPopupMenuClick;
      return _react.default.createElement("ul", {
        onClick: onPopupMenuClick,
        className: (0, _classnames.default)('menu', 'submenu-content', overlayClass, {
          'submenu-visible': visible
        })
      }, _react.default.Children.map(children, this.renderSubMenuItems));
    }
  }]);
  return PopupMenu;
}(_react.Component);

(0, _defineProperty2.default)(PopupMenu, "propTypes", {
  visible: _propTypes.default.bool,
  onClick: _propTypes.default.func,
  onPopupMenuClick: _propTypes.default.func,
  specKey: _propTypes.default.string,
  selectedParentKeys: _propTypes.default.arrayOf(_propTypes.default.string),
  parentKeys: _propTypes.default.arrayOf(_propTypes.default.string),
  overlayClass: _propTypes.default.string,
  selectedKey: _propTypes.default.string,
  handleSelect: _propTypes.default.func,
  children: _propTypes.default.node
});
(0, _defineProperty2.default)(PopupMenu, "defaultProps", {
  parentKeys: []
});
var _default = PopupMenu;
exports.default = _default;