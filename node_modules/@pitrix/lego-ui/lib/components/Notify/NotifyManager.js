"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactDom = require("react-dom");

var _classnames2 = _interopRequireDefault(require("classnames"));

var _utils = require("../../utils");

var _Transition = require("../Transition");

var _Notice = _interopRequireDefault(require("./Notice"));

var NotifyManager =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(NotifyManager, _Component);

  function NotifyManager() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, NotifyManager);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(NotifyManager)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "state", {
      notices: []
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "add", function (notice) {
      var key = notice.key || (0, _utils.generateUUID)('notice');

      _this.setState(function (previousState) {
        var notices = previousState.notices;

        if (!notices.filter(function (v) {
          return v.key === key;
        }).length) {
          return {
            notices: notices.concat((0, _objectSpread2.default)({
              key: key
            }, notice))
          };
        }

        return {};
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "remove", function (key) {
      _this.setState(function (previousState) {
        return {
          notices: previousState.notices.filter(function (notice) {
            return notice.key !== key;
          })
        };
      });
    });
    return _this;
  }

  (0, _createClass2.default)(NotifyManager, [{
    key: "renderNoticeNodes",
    value: function renderNoticeNodes() {
      var _this2 = this;

      var notices = this.state.notices;
      return notices.map(function (notice) {
        var onClose = (0, _utils.createChainedFunction)(_this2.remove.bind(_this2, notice.key), notice.onClose);
        return _react.default.createElement(_Notice.default, (0, _extends2.default)({}, notice, {
          onClose: onClose,
          ref: function ref(n) {
            _this2.notice = n;
          }
        }), notice.content);
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          className = _this$props.className,
          style = _this$props.style,
          animation = _this$props.animation,
          duration = _this$props.duration,
          prefixCls = _this$props.prefixCls;
      return _react.default.createElement(_Transition.TransitionGroup, {
        as: "div",
        duration: duration,
        animation: animation,
        className: (0, _classnames2.default)(prefixCls, (0, _defineProperty2.default)({}, className, !!className)),
        style: style
      }, this.renderNoticeNodes());
    }
  }]);
  return NotifyManager;
}(_react.Component);

(0, _defineProperty2.default)(NotifyManager, "newInstance", function (properties, callback) {
  var _ref = properties || {},
      props = (0, _extends2.default)({}, _ref);

  var wrapper = document.createElement('div');
  wrapper.setAttribute('class', "".concat(props.wrapperCls || 'notify', "-wrapper"));
  document.body.appendChild(wrapper);
  var called = false;

  var ref = function ref(notify) {
    if (called) {
      return;
    }

    called = true;
    callback({
      createNotice: function createNotice(noticeProps) {
        notify.add(noticeProps);
      },
      removeNotice: function removeNotice(key) {
        notify.remove(key);
      },
      component: notify,
      destroy: function destroy() {
        (0, _reactDom.unmountComponentAtNode)(wrapper);
        wrapper.parentNode.removeChild(wrapper);
      }
    });
  };

  (0, _reactDom.render)(_react.default.createElement(NotifyManager, (0, _extends2.default)({
    key: (0, _utils.generateUUID)('notify-manager')
  }, props, {
    ref: ref
  })), wrapper);
});
(0, _defineProperty2.default)(NotifyManager, "propTypes", {
  animation: _propTypes.default.string,
  style: _propTypes.default.object,
  className: _propTypes.default.string,
  duration: _propTypes.default.number,
  prefixCls: _propTypes.default.string
});
(0, _defineProperty2.default)(NotifyManager, "defaultProps", {
  animation: 'fade',
  duration: 500,
  style: {
    top: 65,
    left: '50%'
  },
  prefixCls: 'notify'
});
var _default = NotifyManager;
exports.default = _default;