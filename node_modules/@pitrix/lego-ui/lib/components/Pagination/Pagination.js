"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _noop2 = _interopRequireDefault(require("lodash/noop"));

var _isFunction2 = _interopRequireDefault(require("lodash/isFunction"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Button = _interopRequireDefault(require("../Button/Button"));

var _Icon = _interopRequireDefault(require("../Icon"));

var _InputNumber = _interopRequireDefault(require("../Input/InputNumber"));

var _Select = _interopRequireDefault(require("../Select"));

var _LocaleProvider = require("../LocaleProvider");

var Pagination =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(Pagination, _Component);

  function Pagination() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, Pagination);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Pagination)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleChangePage", function (page) {
      var onChange = _this.props.onChange;

      if ((0, _isFunction2.default)(onChange)) {
        onChange(page);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "hasPrev", function () {
      var current = _this.props.current;
      return current > 1;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "hasNext", function () {
      var _this$props = _this.props,
          current = _this$props.current,
          pageSize = _this$props.pageSize,
          total = _this$props.total;
      return current < Math.ceil(total / pageSize);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handlePrev", function () {
      var current = _this.props.current;
      if (!_this.hasPrev()) return;

      _this.handleChangePage(current - 1);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleNext", function () {
      var current = _this.props.current;
      if (!_this.hasNext()) return;

      _this.handleChangePage(current + 1);
    });
    return _this;
  }

  (0, _createClass2.default)(Pagination, [{
    key: "renderPageSizeOptions",
    value: function renderPageSizeOptions() {
      var _this$props2 = this.props,
          pageSize = _this$props2.pageSize,
          pageSizeOptions = _this$props2.pageSizeOptions,
          onShowSizeChange = _this$props2.onShowSizeChange;
      return _react.default.createElement("span", {
        className: "pagination-size"
      }, _react.default.createElement(_Select.default, {
        searchable: false,
        value: pageSize,
        onChange: onShowSizeChange,
        size: "small",
        options: pageSizeOptions.map(function (size) {
          return {
            value: size,
            label: "".concat(size, " ").concat(_LocaleProvider.locale.get('PER_PAGE'))
          };
        }),
        arrowRenderer: function arrowRenderer(_ref) {
          var onMouseDown = _ref.onMouseDown;
          return _react.default.createElement("span", {
            className: "select-arrow",
            onMouseDown: onMouseDown
          }, _react.default.createElement(_Icon.default, {
            name: "chevron-down",
            size: "small",
            clickable: true
          }));
        }
      }));
    }
  }, {
    key: "renderNavigation",
    value: function renderNavigation() {
      var _this$props3 = this.props,
          current = _this$props3.current,
          pageSize = _this$props3.pageSize,
          total = _this$props3.total,
          onChange = _this$props3.onChange;
      var max = Math.ceil(total / pageSize);
      return _react.default.createElement("span", {
        className: "pagination-navigation"
      }, _LocaleProvider.locale.get('GO_TO'), _react.default.createElement(_InputNumber.default, {
        value: current,
        min: 1,
        max: max,
        step: 1,
        size: "small",
        showButton: false,
        onKeyDown: function onKeyDown(e) {
          if (e.keyCode === 13) {
            onChange(Math.min(Number(e.target.value || current), max));
          }
        },
        isMini: true
      }), _LocaleProvider.locale.get('PAGE'));
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props4 = this.props,
          current = _this$props4.current,
          total = _this$props4.total,
          pageSize = _this$props4.pageSize,
          className = _this$props4.className,
          style = _this$props4.style,
          type = _this$props4.type;
      var totalPage = Math.ceil(total / pageSize) || 1;
      return _react.default.createElement("div", {
        className: (0, _classnames.default)('pagination', "is-".concat(type), className),
        style: (0, _objectSpread2.default)({}, style)
      }, type === 'simple' && this.renderPageSizeOptions(), type === 'simple' && this.renderNavigation(), _react.default.createElement(_Button.default, {
        type: "text",
        onClick: this.handlePrev,
        disabled: function disabled() {
          return !_this2.hasPrev();
        }
      }, _react.default.createElement(_Icon.default, {
        name: "previous",
        size: 20
      })), _react.default.createElement("span", {
        className: "pagination-info"
      }, "".concat(current, " / ").concat(totalPage)), _react.default.createElement(_Button.default, {
        type: "text",
        onClick: this.handleNext,
        disabled: function disabled() {
          return !_this2.hasNext();
        }
      }, _react.default.createElement(_Icon.default, {
        name: "next",
        size: 20
      })));
    }
  }]);
  return Pagination;
}(_react.Component);

(0, _defineProperty2.default)(Pagination, "propTypes", {
  current: _propTypes.default.number,
  total: _propTypes.default.number,
  pageSize: _propTypes.default.number,
  className: _propTypes.default.string,
  style: _propTypes.default.object,
  type: _propTypes.default.oneOf(['mini', 'simple']),
  pageSizeOptions: _propTypes.default.arrayOf(_propTypes.default.number),
  onChange: _propTypes.default.func,
  onShowSizeChange: _propTypes.default.func
});
(0, _defineProperty2.default)(Pagination, "defaultProps", {
  current: 1,
  total: 0,
  type: 'mini',
  onChange: _noop2.default,
  pageSizeOptions: [20, 50, 100]
});
var _default = Pagination;
exports.default = _default;