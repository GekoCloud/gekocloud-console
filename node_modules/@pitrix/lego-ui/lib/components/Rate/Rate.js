"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _noop2 = _interopRequireDefault(require("lodash/noop"));

var _react = _interopRequireWildcard(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _utils = _interopRequireDefault(require("./utils"));

var _Star = _interopRequireDefault(require("./Star"));

var Rate =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(Rate, _Component);

  function Rate(props) {
    var _this;

    (0, _classCallCheck2.default)(this, Rate);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Rate).call(this, props));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onHover", function (event, index) {
      var hoverValue = _this.getStarValue(index, event.pageX);

      var cleanedValue = _this.state.cleanedValue;

      if (hoverValue !== cleanedValue) {
        _this.setState({
          hoverValue: hoverValue,
          cleanedValue: null
        });
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onMouseLeave", function () {
      _this.setState({
        hoverValue: undefined,
        cleanedValue: null
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onClick", function (event, index) {
      var allowClear = _this.props.allowClear;
      var currentValue = _this.state.value;

      var value = _this.getStarValue(index, event.pageX);

      var isReset = false;

      if (allowClear) {
        isReset = value === currentValue;
      }

      _this.onMouseLeave(true);

      _this.changeValue(isReset ? 0 : value);

      _this.setState({
        cleanedValue: isReset ? value : null
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onFocus", function () {
      var onFocus = _this.props.onFocus;

      _this.setState({
        focused: true
      });

      if (onFocus) {
        onFocus();
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onBlur", function () {
      var onBlur = _this.props.onBlur;

      _this.setState({
        focused: false
      });

      if (onBlur) {
        onBlur();
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onKeyDown", function (event) {
      var keyCode = event.keyCode;
      var _this$props = _this.props,
          count = _this$props.count,
          allowHalf = _this$props.allowHalf,
          onKeyDown = _this$props.onKeyDown;
      var value = _this.state.value;

      if (keyCode === 39 && value < count) {
        if (allowHalf) {
          value += 0.5;
        } else {
          value += 1;
        }

        _this.changeValue(value);

        event.preventDefault();
      } else if (keyCode === 37 && value > 0) {
        if (allowHalf) {
          value -= 0.5;
        } else {
          value -= 1;
        }

        _this.changeValue(value);

        event.preventDefault();
      }

      if (onKeyDown) {
        onKeyDown(event);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "saveRef", function (index) {
      return function (node) {
        _this.stars[index] = node;
      };
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "saveRate", function (node) {
      _this.rate = node;
    });
    var initValue = props.value === undefined ? props.defaultValue : props.value;
    if (initValue < 0) initValue = 0;
    if (initValue > props.count) initValue = props.count;
    _this.stars = {};
    _this.state = {
      value: initValue,
      focused: false,
      cleanedValue: null
    };
    return _this;
  }

  (0, _createClass2.default)(Rate, [{
    key: "getStarDOM",
    value: function getStarDOM(index) {
      return _reactDom.default.findDOMNode(this.stars[index]);
    }
  }, {
    key: "getStarValue",
    value: function getStarValue(index, x) {
      var value = index + 1;
      var allowHalf = this.props.allowHalf;

      if (allowHalf) {
        var starEle = this.getStarDOM(index);
        var leftDis = (0, _utils.default)(starEle);
        var width = starEle.clientWidth;

        if (x - leftDis < width / 2) {
          value -= 0.5;
        }
      }

      return value;
    }
  }, {
    key: "focus",
    value: function focus() {
      var disabled = this.props.disabled;

      if (!disabled) {
        this.rate.focus();
      }
    }
  }, {
    key: "blur",
    value: function blur() {
      var disabled = this.props.disabled;

      if (!disabled) {
        this.rate.focus();
      }
    }
  }, {
    key: "changeValue",
    value: function changeValue(value) {
      var onChange = this.props.onChange;

      if (!('value' in this.props)) {
        this.setState({
          value: value
        });
      }

      onChange(value);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          count = _this$props2.count,
          allowHalf = _this$props2.allowHalf,
          style = _this$props2.style,
          disabled = _this$props2.disabled,
          className = _this$props2.className,
          character = _this$props2.character;
      var _this$state = this.state,
          value = _this$state.value,
          hoverValue = _this$state.hoverValue,
          focused = _this$state.focused;
      var stars = [];
      var disabledClass = disabled ? 'rate-disabled' : '';

      for (var index = 0; index < count; index += 1) {
        stars.push(_react.default.createElement(_Star.default, {
          ref: this.saveRef(index),
          index: index,
          count: count,
          disabled: disabled,
          allowHalf: allowHalf,
          value: hoverValue === undefined ? value : hoverValue,
          onClick: this.onClick,
          onHover: this.onHover,
          key: index,
          character: character,
          focused: focused
        }));
      }

      return _react.default.createElement("ul", {
        className: (0, _classnames.default)('rate', disabledClass, className),
        style: style,
        onMouseLeave: disabled ? null : this.onMouseLeave,
        onFocus: disabled ? null : this.onFocus,
        onBlur: disabled ? null : this.onBlur,
        onKeyDown: disabled ? null : this.onKeyDown,
        ref: this.saveRate
      }, stars);
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps) {
      if ('value' in nextProps && nextProps.value !== undefined) {
        var nextValue = nextProps.value;
        if (nextValue < 0) nextValue = 0;
        if (nextValue > nextProps.count) nextValue = nextProps.count;
        return {
          value: nextValue
        };
      }

      return null;
    }
  }]);
  return Rate;
}(_react.Component);

(0, _defineProperty2.default)(Rate, "propTypes", {
  disabled: _propTypes.default.bool,
  value: _propTypes.default.number,
  defaultValue: _propTypes.default.number,
  count: _propTypes.default.number,
  allowHalf: _propTypes.default.bool,
  allowClear: _propTypes.default.bool,
  style: _propTypes.default.object,
  onChange: _propTypes.default.func,
  className: _propTypes.default.string,
  character: _propTypes.default.node,
  onFocus: _propTypes.default.func,
  onBlur: _propTypes.default.func,
  onKeyDown: _propTypes.default.func
});
(0, _defineProperty2.default)(Rate, "defaultProps", {
  defaultValue: 0,
  count: 5,
  allowHalf: false,
  allowClear: true,
  style: {},
  onChange: _noop2.default
});
var _default = Rate;
exports.default = _default;