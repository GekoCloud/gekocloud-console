"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var Handle =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(Handle, _Component);

  function Handle() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, Handle);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Handle)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "state", {
      clickFocused: false
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setHandleRef", function (node) {
      _this.handle = node;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleMouseUp", function () {
      if (document.activeElement === _this.handle) {
        _this.setClickFocus(true);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleBlur", function () {
      _this.setClickFocus(false);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleKeyDown", function () {
      _this.setClickFocus(false);
    });
    return _this;
  }

  (0, _createClass2.default)(Handle, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      document.addEventListener('mouseup', this.handleMouseUp);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.onMouseUpListener) {
        this.onMouseUpListener.remove();
      }
    }
  }, {
    key: "setClickFocus",
    value: function setClickFocus(focused) {
      this.setState({
        clickFocused: focused
      });
    }
  }, {
    key: "clickFocus",
    value: function clickFocus() {
      this.setClickFocus(true);
      this.focus();
    }
  }, {
    key: "focus",
    value: function focus() {
      this.handle.focus();
    }
  }, {
    key: "blur",
    value: function blur() {
      this.handle.blur();
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          prefixCls = _this$props.prefixCls,
          vertical = _this$props.vertical,
          offset = _this$props.offset,
          style = _this$props.style,
          disabled = _this$props.disabled,
          min = _this$props.min,
          max = _this$props.max,
          value = _this$props.value,
          propsClassName = _this$props.className,
          restProps = (0, _objectWithoutProperties2.default)(_this$props, ["prefixCls", "vertical", "offset", "style", "disabled", "min", "max", "value", "className"]);
      var clickFocused = this.state.clickFocused;
      var className = (0, _classnames.default)(propsClassName, (0, _defineProperty2.default)({}, "".concat(prefixCls, "-handle-click-focused"), clickFocused));
      var positionStyle = vertical ? {
        bottom: "".concat(offset, "%")
      } : {
        left: "".concat(offset, "%")
      };
      var elStyle = (0, _objectSpread2.default)({}, style, positionStyle);
      return _react.default.createElement("div", (0, _extends2.default)({
        ref: this.setHandleRef
      }, restProps, {
        className: className,
        style: elStyle,
        onBlur: this.handleBlur,
        onKeyDown: this.handleKeyDown // aria attribute
        ,
        role: "slider",
        "aria-valuemin": min,
        "aria-valuemax": max,
        "aria-valuenow": value,
        "aria-disabled": !!disabled
      }));
    }
  }]);
  return Handle;
}(_react.Component);

(0, _defineProperty2.default)(Handle, "propTypes", {
  prefixCls: _propTypes.default.string,
  className: _propTypes.default.string,
  vertical: _propTypes.default.bool,
  offset: _propTypes.default.number,
  style: _propTypes.default.object,
  disabled: _propTypes.default.bool,
  min: _propTypes.default.number,
  max: _propTypes.default.number,
  value: _propTypes.default.number
});
var _default = Handle;
exports.default = _default;