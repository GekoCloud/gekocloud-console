"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _warning = _interopRequireDefault(require("../../../utils/warning"));

var calcPoints = function calcPoints(vertical, marks, markDots, step, stepDots, min, max) {
  (0, _warning.default)(stepDots ? step > 0 : true, '`Slider[step]` should be a positive number in order to make Slider[dots] work.');
  var points = [];

  if (markDots) {
    points = Object.keys(marks).map(parseFloat);
  }

  if (stepDots) {
    for (var i = min; i <= max; i += step) {
      if (points.indexOf(i) < 0) points.push(i);
    }
  }

  return points;
};

var Steps = function Steps(_ref) {
  var prefixCls = _ref.prefixCls,
      vertical = _ref.vertical,
      marks = _ref.marks,
      markDots = _ref.markDots,
      stepDots = _ref.stepDots,
      step = _ref.step,
      included = _ref.included,
      lowerBound = _ref.lowerBound,
      upperBound = _ref.upperBound,
      max = _ref.max,
      min = _ref.min,
      dotStyle = _ref.dotStyle,
      activeDotStyle = _ref.activeDotStyle;
  var range = max - min;
  var elements = calcPoints(vertical, marks, markDots, step, stepDots, min, max).map(function (point) {
    var _classNames;

    var offset = "".concat(Math.abs(point - min) / range * 100, "%");
    var isActive = !included && point === upperBound || included && point <= upperBound && point >= lowerBound;
    var style = vertical ? (0, _objectSpread2.default)({
      bottom: offset
    }, dotStyle) : (0, _objectSpread2.default)({
      left: offset
    }, dotStyle);

    if (isActive) {
      style = (0, _objectSpread2.default)({}, style, activeDotStyle);
    }

    var pointClassName = (0, _classnames.default)((_classNames = {}, (0, _defineProperty2.default)(_classNames, "".concat(prefixCls, "-dot"), true), (0, _defineProperty2.default)(_classNames, "".concat(prefixCls, "-dot-active"), isActive), _classNames));
    return _react.default.createElement("span", {
      className: pointClassName,
      style: style,
      key: point
    });
  });
  return _react.default.createElement("div", {
    className: "".concat(prefixCls, "-step")
  }, elements);
};

Steps.propTypes = {
  prefixCls: _propTypes.default.string,
  markDots: _propTypes.default.bool,
  stepDots: _propTypes.default.bool,
  vertical: _propTypes.default.bool,
  marks: _propTypes.default.object,
  included: _propTypes.default.bool,
  step: _propTypes.default.number,
  upperBound: _propTypes.default.number,
  lowerBound: _propTypes.default.number,
  min: _propTypes.default.number,
  max: _propTypes.default.number,
  dotStyle: _propTypes.default.object,
  activeDotStyle: _propTypes.default.object
};
var _default = Steps;
exports.default = _default;