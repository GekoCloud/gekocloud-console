"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createSlider;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _noop2 = _interopRequireDefault(require("lodash/noop"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _Steps = _interopRequireDefault(require("./Steps"));

var _Marks = _interopRequireDefault(require("./Marks"));

var _Handle = _interopRequireDefault(require("../Handle"));

var utils = _interopRequireWildcard(require("../sliderUtils"));

function createSlider(Component) {
  var _class, _temp;

  return _temp = _class =
  /*#__PURE__*/
  function (_Component) {
    (0, _inherits2.default)(ComponentEnhancer, _Component);

    /* eslint-disable react/forbid-foreign-prop-types */
    function ComponentEnhancer(props) {
      var _this;

      (0, _classCallCheck2.default)(this, ComponentEnhancer);
      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ComponentEnhancer).call(this, props));
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onFocus", function (e) {
        var _this$props = _this.props,
            onFocus = _this$props.onFocus,
            vertical = _this$props.vertical;

        if (utils.isEventFromHandle(e, _this.handlesRefs)) {
          var handlePosition = utils.getHandleCenterPosition(vertical, e.target);
          _this.dragOffset = 0;

          _this.onStart(handlePosition);

          utils.pauseEvent(e);

          if (onFocus) {
            onFocus(e);
          }
        }
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onBlur", function (e) {
        var onBlur = _this.props.onBlur;

        if (onBlur) {
          onBlur(e);
        }
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onMouseUp", function () {
        if (_this.handlesRefs[_this.prevMovedHandleIndex]) {
          _this.handlesRefs[_this.prevMovedHandleIndex].clickFocus();
        }
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onMouseDown", function (e) {
        var vertical = _this.props.vertical;
        if (e.button !== 0) return;
        var position = utils.getMousePosition(vertical, e);

        if (!utils.isEventFromHandle(e, _this.handlesRefs)) {
          _this.dragOffset = 0;
        } else {
          var handlePosition = utils.getHandleCenterPosition(vertical, e.target);
          _this.dragOffset = position - handlePosition;
          position = handlePosition;
        }

        _this.removeDocumentEvents();

        _this.onStart(position);

        _this.addDocumentMouseEvents();
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onClickMarkLabel", function (e, value) {
        e.stopPropagation();

        _this.onChange({
          value: value
        });
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onTouchStart", function (e) {
        var vertical = _this.props.vertical;
        if (utils.isNotTouchEvent(e)) return;
        var position = utils.getTouchPosition(vertical, e);

        if (!utils.isEventFromHandle(e, _this.handlesRefs)) {
          _this.dragOffset = 0;
        } else {
          var handlePosition = utils.getHandleCenterPosition(vertical, e.target);
          _this.dragOffset = position - handlePosition;
          position = handlePosition;
        }

        _this.onStart(position);

        _this.addDocumentTouchEvents();

        utils.pauseEvent(e);
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onMouseMove", function (e) {
        var vertical = _this.props.vertical;

        if (!_this.sliderRef) {
          _this.onEnd();

          return;
        }

        var position = utils.getMousePosition(vertical, e);

        _this.onMove(e, position - _this.dragOffset);
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onTouchMove", function (e) {
        var vertical = _this.props.vertical;

        if (utils.isNotTouchEvent(e) || !_this.sliderRef) {
          _this.onEnd();

          return;
        }

        var position = utils.getTouchPosition(vertical, e);

        _this.onMove(e, position - _this.dragOffset);
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "onKeyDown", function (e) {
        if (_this.sliderRef && utils.isEventFromHandle(e, _this.handlesRefs)) {
          _this.onKeyboard(e);
        }
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getSliderStart", function () {
        var vertical = _this.props.vertical;
        var slider = _this.sliderRef;
        var rect = slider.getBoundingClientRect();
        return vertical ? rect.top : rect.left;
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "getSliderLength", function () {
        var vertical = _this.props.vertical;
        var slider = _this.sliderRef;

        if (!slider) {
          return 0;
        }

        var coords = slider.getBoundingClientRect();
        return vertical ? coords.height : coords.width;
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "addDocumentTouchEvents", function () {
        _this.document.addEventListener('touchmove', _this.onTouchMove);

        _this.document.addEventListener('touchend', _this.onEnd);
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "addDocumentMouseEvents", function () {
        _this.document.addEventListener('mousemove', _this.onMouseMove);

        _this.document.addEventListener('mouseup', _this.onEnd);
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "removeDocumentEvents", function () {
        _this.document.removeEventListener('touchmove', _this.onTouchMove);

        _this.document.removeEventListener('touchend', _this.onEnd);

        _this.document.removeEventListener('mousemove', _this.onMouseMove);

        _this.document.removeEventListener('mouseup', _this.onEnd);
      });
      (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "saveSlider", function (slider) {
        _this.sliderRef = slider;
      });
      _this.handlesRefs = {};
      return _this;
    }

    (0, _createClass2.default)(ComponentEnhancer, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.document = this.sliderRef && this.sliderRef.ownerDocument;
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if ((0, _get2.default)((0, _getPrototypeOf2.default)(ComponentEnhancer.prototype), "componentWillUnmount", this)) (0, _get2.default)((0, _getPrototypeOf2.default)(ComponentEnhancer.prototype), "componentWillUnmount", this).call(this);
        this.removeDocumentEvents();
      }
    }, {
      key: "focus",
      value: function focus() {
        var disabled = this.props.disabled;

        if (!disabled) {
          this.handlesRefs[0].focus();
        }
      }
    }, {
      key: "blur",
      value: function blur() {
        var _this2 = this;

        var disabled = this.props.disabled;

        if (!disabled) {
          Object.keys(this.handlesRefs).forEach(function (key) {
            if (_this2.handlesRefs[key] && _this2.handlesRefs[key].blur) {
              _this2.handlesRefs[key].blur();
            }
          });
        }
      }
    }, {
      key: "calcValue",
      value: function calcValue(offset) {
        var _this$props2 = this.props,
            vertical = _this$props2.vertical,
            min = _this$props2.min,
            max = _this$props2.max;
        var ratio = Math.abs(Math.max(offset, 0) / this.getSliderLength());
        var value = vertical ? (1 - ratio) * (max - min) + min : ratio * (max - min) + min;
        return value;
      }
    }, {
      key: "calcValueByPos",
      value: function calcValueByPos(position) {
        var pixelOffset = position - this.getSliderStart();
        var nextValue = this.trimAlignValue(this.calcValue(pixelOffset));
        return nextValue;
      }
    }, {
      key: "calcOffset",
      value: function calcOffset(value) {
        var _this$props3 = this.props,
            min = _this$props3.min,
            max = _this$props3.max;
        var ratio = (value - min) / (max - min);
        return ratio * 100;
      }
    }, {
      key: "saveHandle",
      value: function saveHandle(index, handle) {
        this.handlesRefs[index] = handle;
      }
    }, {
      key: "render",
      value: function render() {
        var _classNames;

        var _this$props4 = this.props,
            prefixCls = _this$props4.prefixCls,
            className = _this$props4.className,
            marks = _this$props4.marks,
            help = _this$props4.help,
            markDots = _this$props4.markDots,
            stepDots = _this$props4.stepDots,
            step = _this$props4.step,
            included = _this$props4.included,
            disabled = _this$props4.disabled,
            vertical = _this$props4.vertical,
            min = _this$props4.min,
            max = _this$props4.max,
            children = _this$props4.children,
            style = _this$props4.style,
            railStyle = _this$props4.railStyle,
            dotStyle = _this$props4.dotStyle,
            activeDotStyle = _this$props4.activeDotStyle;

        var _get$call = (0, _get2.default)((0, _getPrototypeOf2.default)(ComponentEnhancer.prototype), "render", this).call(this),
            tracks = _get$call.tracks,
            handles = _get$call.handles;

        var sliderClassName = (0, _classnames.default)(prefixCls, (_classNames = {}, (0, _defineProperty2.default)(_classNames, "".concat(prefixCls, "-with-marks"), Object.keys(marks).length || help), (0, _defineProperty2.default)(_classNames, "".concat(prefixCls, "-with-help"), Object.keys(marks).length || help), (0, _defineProperty2.default)(_classNames, "".concat(prefixCls, "-disabled"), disabled), (0, _defineProperty2.default)(_classNames, "".concat(prefixCls, "-vertical"), vertical), (0, _defineProperty2.default)(_classNames, className, className), _classNames));
        return _react.default.createElement("div", {
          ref: this.saveSlider,
          className: sliderClassName,
          onTouchStart: disabled ? _noop2.default : this.onTouchStart,
          onMouseDown: disabled ? _noop2.default : this.onMouseDown,
          onMouseUp: disabled ? _noop2.default : this.onMouseUp,
          onKeyDown: disabled ? _noop2.default : this.onKeyDown,
          onFocus: disabled ? _noop2.default : this.onFocus,
          onBlur: disabled ? _noop2.default : this.onBlur,
          style: style
        }, _react.default.createElement("div", {
          className: "".concat(prefixCls, "-rail"),
          style: railStyle
        }), tracks, _react.default.createElement(_Steps.default, {
          prefixCls: prefixCls,
          vertical: vertical,
          marks: marks,
          markDots: markDots,
          step: step,
          stepDots: stepDots,
          included: included,
          lowerBound: this.getLowerBound(),
          upperBound: this.getUpperBound(),
          max: max,
          min: min,
          dotStyle: dotStyle,
          activeDotStyle: activeDotStyle
        }), handles, _react.default.createElement(_Marks.default, {
          className: "".concat(prefixCls, "-mark"),
          onClickLabel: disabled ? _noop2.default : this.onClickMarkLabel,
          vertical: vertical,
          marks: marks,
          included: included,
          lowerBound: this.getLowerBound(),
          upperBound: this.getUpperBound(),
          max: max,
          min: min
        }), _react.default.createElement("div", {
          className: "".concat(prefixCls, "-help")
        }, help), children);
      }
    }]);
    return ComponentEnhancer;
  }(Component), (0, _defineProperty2.default)(_class, "propTypes", (0, _objectSpread2.default)({}, Component.propTypes, {
    min: _propTypes.default.number,
    max: _propTypes.default.number,
    step: _propTypes.default.number,
    marks: _propTypes.default.object,
    help: _propTypes.default.oneOfType([_propTypes.default.node, _propTypes.default.element, _propTypes.default.string]),
    included: _propTypes.default.bool,
    className: _propTypes.default.string,
    prefixCls: _propTypes.default.string,
    disabled: _propTypes.default.bool,
    children: _propTypes.default.node,
    onBeforeChange: _propTypes.default.func,
    onChange: _propTypes.default.func,
    onAfterChange: _propTypes.default.func,
    handle: _propTypes.default.func,
    markDots: _propTypes.default.bool,
    stepDots: _propTypes.default.bool,
    vertical: _propTypes.default.bool,
    style: _propTypes.default.object,
    handleStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.arrayOf(_propTypes.default.object)]),
    trackStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.arrayOf(_propTypes.default.object)]),
    railStyle: _propTypes.default.object,
    dotStyle: _propTypes.default.object,
    activeDotStyle: _propTypes.default.object,
    autoFocus: _propTypes.default.bool,
    onFocus: _propTypes.default.func,
    onBlur: _propTypes.default.func
  })), (0, _defineProperty2.default)(_class, "defaultProps", (0, _objectSpread2.default)({}, Component.defaultProps, {
    prefixCls: 'slider',
    className: '',
    min: 0,
    max: 100,
    step: 1,
    marks: {},
    handle: function handle(_ref) {
      var index = _ref.index,
          dragging = _ref.dragging,
          restProps = (0, _objectWithoutProperties2.default)(_ref, ["index", "dragging"]);
      return _react.default.createElement(_Handle.default, (0, _extends2.default)({}, restProps, {
        key: index
      }));
    },
    onBeforeChange: _noop2.default,
    onChange: _noop2.default,
    onAfterChange: _noop2.default,
    included: true,
    disabled: false,
    markDots: false,
    stepDots: false,
    vertical: false,
    trackStyle: [{}],
    handleStyle: [{}],
    railStyle: {},
    dotStyle: {},
    activeDotStyle: {}
  })), _temp;
}