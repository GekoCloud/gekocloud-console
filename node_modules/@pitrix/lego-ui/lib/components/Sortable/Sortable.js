"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _omit2 = _interopRequireDefault(require("lodash/omit"));

var _isFunction2 = _interopRequireDefault(require("lodash/isFunction"));

var _react = _interopRequireWildcard(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _sortablejs = _interopRequireDefault(require("sortablejs"));

var store = {
  nextSibling: null,
  activeComponent: null
};
var handler = ['onChoose', 'onStart', 'onEnd', 'onAdd', 'onUpdate', 'onSort', 'onRemove', 'onFilter', 'onMove', 'onClone'];
var findDOMNode = _reactDom.default.findDOMNode;

var Sortable =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(Sortable, _Component);

  function Sortable() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, Sortable);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Sortable)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "sortable", null);
    return _this;
  }

  (0, _createClass2.default)(Sortable, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      var _this$props = this.props,
          options = _this$props.options,
          onChange = _this$props.onChange;
      handler.forEach(function (name) {
        var eventHandler = options[name];

        options[name] = function () {
          for (var _len2 = arguments.length, params = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            params[_key2] = arguments[_key2];
          }

          var evt = params[0];

          if (name === 'onChoose') {
            store.nextSibling = evt.item.nextElementSibling;
            store.activeComponent = _this2;
          } else if ((name === 'onAdd' || name === 'onUpdate') && onChange) {
            var items = _this2.sortable.toArray();

            var remote = store.activeComponent;
            var remoteItems = remote.sortable && remote.sortable.toArray();
            var nextSibling = store.nextSibling;
            var referenceNode = nextSibling && nextSibling.parentNode !== null ? nextSibling : null;
            evt.from.insertBefore(evt.item, referenceNode);

            if (remote !== _this2) {
              var _remote$props = remote.props,
                  _remote$props$options = _remote$props.options,
                  remoteOptions = _remote$props$options === void 0 ? {} : _remote$props$options,
                  remoteOnChange = _remote$props.onChange,
                  sortable = _remote$props.sortable;
              var group = remoteOptions.group;

              if (group && group.pull === 'clone') {
                evt.item.parentNode.removeChild(evt.item);
              }

              if ((0, _isFunction2.default)(remoteOnChange)) {
                remoteOnChange(remoteItems, sortable, evt);
              }
            }

            if ((0, _isFunction2.default)(onChange)) {
              onChange(items, _this2.sortable, evt);
            }
          }

          if (evt.type === 'move') {
            var event = params[0],
                originalEvent = params[1];
            var canMove = eventHandler ? eventHandler(event, originalEvent) : true;
            return canMove;
          }

          setTimeout(function () {
            if ((0, _isFunction2.default)(eventHandler)) {
              eventHandler(evt);
            }
          }, 0);
          return false;
        };
      });
      this.sortable = _sortablejs.default.create(findDOMNode(this), options);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.sortable) {
        this.sortable.destroy();
        this.sortable = null;
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          Tag = _this$props2.tag,
          props = (0, _objectWithoutProperties2.default)(_this$props2, ["tag"]);
      var restProps = (0, _omit2.default)(props, ['options', 'onChange']);
      return _react.default.createElement(Tag, restProps);
    }
  }]);
  return Sortable;
}(_react.Component);

(0, _defineProperty2.default)(Sortable, "propTypes", {
  options: _propTypes.default.object,
  onChange: _propTypes.default.func,
  tag: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func]),
  style: _propTypes.default.object,
  className: _propTypes.default.string
});
(0, _defineProperty2.default)(Sortable, "defaultProps", {
  options: {},
  tag: 'div'
});
var _default = Sortable;
exports.default = _default;