"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _noop2 = _interopRequireDefault(require("lodash/noop"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _reactInputAutosize = _interopRequireDefault(require("react-input-autosize"));

var SEMICOLON = ':';

var Autosuggest =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(Autosuggest, _Component);

  function Autosuggest() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, Autosuggest);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Autosuggest)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "state", {
      isOpen: false,
      selectedIndex: -1,
      value: '',
      curItem: null
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "open", function () {
      _this.setState({
        isOpen: true,
        selectedIndex: -1
      });

      document.addEventListener('click', _this.handleDestroyAutosuggest);
      document.addEventListener('contextmenu', _this.handleDestroyAutosuggest);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "close", function () {
      _this.setState({
        isOpen: false,
        selectedIndex: -1
      });

      document.removeEventListener('click', _this.handleDestroyAutosuggest);
      document.removeEventListener('contextmenu', _this.handleDestroyAutosuggest);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "focus", function () {
      _this.inputBox.focus();
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "blur", function () {
      _this.inputBox.blur();
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "clear", function () {
      _this.blur();

      _this.setState({
        isOpen: false,
        selectedIndex: -1,
        value: '',
        curItem: null
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleMouseLeave", function () {
      _this.setState({
        selectedIndex: -1
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleMouseEnter", function (index) {
      return function () {
        _this.setState({
          selectedIndex: index
        });
      };
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleMouseDown", function () {
      _this.isBlur = false;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleChange", function (e) {
      var value = e.target.value;
      var _this$props = _this.props,
          onChange = _this$props.onChange,
          items = _this$props.items;
      var item = items.find(function (n) {
        return new RegExp("^".concat(n.label + SEMICOLON), '').test(value);
      });

      if (item) {
        _this.setState({
          value: value,
          curItem: item
        });
      } else {
        _this.setState({
          value: value,
          curItem: null
        });
      }

      onChange(e, value);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleSelected", function (params, event) {
      var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),
          inputBox = _assertThisInitialize.inputBox;

      var onSelected = _this.props.onSelected;

      _this.setState({
        value: '',
        selectedIndex: -1,
        curItem: null
      }, function () {
        onSelected(params, event);
        inputBox.focus();
        _this.isBlur = true;

        _this.close();
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handlePressEnter", function (event) {
      event.stopPropagation();
      var _this$state = _this.state,
          selectedIndex = _this$state.selectedIndex,
          value = _this$state.value,
          curItem = _this$state.curItem;
      var params = {};

      if (selectedIndex > -1 && _this.items.length > 0) {
        var item = _this.items[selectedIndex];

        if (item.options && item.options.length > 0 && curItem === null) {
          _this.setState({
            selectedIndex: 0,
            value: item.label + SEMICOLON,
            curItem: item
          });

          return;
        }

        if (curItem) {
          params = {
            filter: curItem.key,
            filterLabel: curItem.label,
            value: item.key,
            valueLabel: item.label
          };

          _this.handleSelected(params, event);

          return;
        }

        _this.setState({
          selectedIndex: -1,
          value: item.label + SEMICOLON,
          curItem: item
        });

        return;
      }

      if (curItem) {
        var val = value.replace(new RegExp(curItem.label + SEMICOLON), '').trim();
        if (val === '') return;
        params = {
          filter: curItem.key,
          filterLabel: curItem.label,
          value: val,
          valueLabel: val
        };

        _this.handleSelected(params, event);

        return;
      }

      if (value.trim() !== '') {
        params = {
          filter: 'keyword',
          filterLabel: '',
          value: value,
          valueLabel: value
        };

        _this.handleSelected(params, event);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleSelectItem", function (item) {
      return function (event) {
        event.stopPropagation();

        var _assertThisInitialize2 = (0, _assertThisInitialized2.default)(_this),
            inputBox = _assertThisInitialize2.inputBox;

        var changeEvent = new Event('input', {
          bubbles: true
        });
        inputBox.input.dispatchEvent(changeEvent);
        var curItem = _this.state.curItem;

        if (!curItem) {
          _this.setState({
            value: item.label + SEMICOLON,
            curItem: item
          }, function () {
            inputBox.focus();
          });

          return;
        }

        _this.handleSelected({
          filter: curItem.key,
          filterLabel: curItem.label,
          value: item.key,
          valueLabel: item.label
        }, event);
      };
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleFocus", function (event) {
      var onFocus = _this.props.onFocus;

      _this.open();

      _this.isBlur = false;

      if (onFocus) {
        onFocus(event);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleBlur", function (event) {
      var onBlur = _this.props.onBlur;

      if (onBlur) {
        onBlur(event);
      }

      if (!_this.isBlur) return;

      _this.close();
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleDelete", function (event) {
      var onDelete = _this.props.onDelete;
      var value = _this.state.value;

      if (value === '') {
        event.preventDefault();

        _this.close();

        onDelete(event);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleKeyDown", function (event) {
      var selectedIndex = _this.state.selectedIndex;

      _this.open();

      switch (event.key) {
        case 'ArrowDown':
          event.preventDefault();

          _this.setState({
            selectedIndex: Math.min(selectedIndex + 1, _this.items.length - 1)
          });

          break;

        case 'ArrowUp':
          event.preventDefault();

          _this.setState({
            selectedIndex: Math.max(selectedIndex - 1, 0)
          });

          break;

        case 'Enter':
          _this.handlePressEnter(event);

          break;

        case 'Escape':
          _this.close();

          break;

        case 'Backspace':
          _this.handleDelete(event);

          break;

        default:
          break;
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleDestroyAutosuggest", function (e) {
      if (!_this.autosuggest) {
        return;
      }

      var parentNode = _this.autosuggest.parentNode && _this.autosuggest.parentNode.parentNode;

      if (!parentNode.contains(e.target)) {
        _this.close();
      }
    });
    return _this;
  }

  (0, _createClass2.default)(Autosuggest, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.isBlur = true;
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$state2 = this.state,
          isOpen = _this$state2.isOpen,
          value = _this$state2.value,
          stateSelectedIndex = _this$state2.selectedIndex;
      var _this$props2 = this.props,
          prefixCls = _this$props2.prefixCls,
          className = _this$props2.className,
          style = _this$props2.style,
          placeholder = _this$props2.placeholder,
          _this$props2$renderMe = _this$props2.renderMenu,
          Menu = _this$props2$renderMe === void 0 ? function (_ref) {
        var items = _ref.items;
        return _react.default.createElement("ul", {
          className: "".concat(prefixCls, "-menu")
        }, items);
      } : _this$props2$renderMe,
          _this$props2$renderIt = _this$props2.renderItem,
          Item = _this$props2$renderIt === void 0 ? function (_ref2) {
        var item = _ref2.item,
            selectedIndex = _ref2.selectedIndex;
        return _react.default.createElement("li", {
          className: (0, _classnames.default)("".concat(prefixCls, "-item"), {
            'is-active': selectedIndex
          })
        }, item.label);
      } : _this$props2$renderIt;
      var showMenu = isOpen && this.items.length > 0;
      var renderedItems = this.items.map(function (item, index) {
        var selectedIndex = stateSelectedIndex === index;
        return _react.default.cloneElement(Item({
          item: item,
          index: index,
          selectedIndex: selectedIndex
        }), {
          onMouseEnter: _this2.handleMouseEnter(index),
          onMouseDown: _this2.handleMouseDown,
          onClick: _this2.handleSelectItem(item),
          key: "option-".concat(index + 1)
        });
      });

      var renderedMenu = _react.default.cloneElement(Menu({
        items: renderedItems
      }), {
        onMouseLeave: this.handleMouseLeave
      });

      return _react.default.createElement("div", {
        style: style,
        className: (0, _classnames.default)(prefixCls, className),
        ref: function ref(n) {
          _this2.autosuggest = n;
        }
      }, _react.default.createElement(_reactInputAutosize.default, {
        className: "".concat(prefixCls, "-input"),
        type: "text",
        onKeyDown: this.handleKeyDown,
        onFocus: this.handleFocus,
        onBlur: this.handleBlur,
        onChange: this.handleChange,
        placeholder: placeholder,
        ref: function ref(n) {
          _this2.inputBox = n;
        },
        value: value
      }), showMenu && renderedMenu);
    }
  }, {
    key: "value",
    get: function get() {
      return this.inputBox ? this.inputBox.input.value : '';
    }
  }, {
    key: "items",
    get: function get() {
      var _this$props3 = this.props,
          items = _this$props3.items,
          filter = _this$props3.filter,
          sort = _this$props3.sort,
          limit = _this$props3.limit;
      var _this$state3 = this.state,
          value = _this$state3.value,
          curItem = _this$state3.curItem;
      var results = items.filter(function (item) {
        return filter(item, value);
      }).sort(sort).slice(0, limit);

      if (curItem && curItem.options && value === curItem.label + SEMICOLON) {
        return curItem.options;
      }

      return results;
    }
  }]);
  return Autosuggest;
}(_react.Component);

(0, _defineProperty2.default)(Autosuggest, "propTypes", {
  items: _propTypes.default.array,
  filter: _propTypes.default.func,
  sort: _propTypes.default.any,
  limit: _propTypes.default.number,
  renderMenu: _propTypes.default.func,
  renderItem: _propTypes.default.func,
  onSelected: _propTypes.default.func,
  onChange: _propTypes.default.func,
  onFocus: _propTypes.default.func,
  onBlur: _propTypes.default.func,
  onDelete: _propTypes.default.func,
  prefixCls: _propTypes.default.string,
  className: _propTypes.default.string,
  style: _propTypes.default.string,
  placeholder: _propTypes.default.string
});
(0, _defineProperty2.default)(Autosuggest, "defaultProps", {
  items: [],
  prefixCls: 'autosuggest',
  filter: function filter(item, query) {
    return item.label.toLowerCase().includes(query.trim().toLowerCase());
  },
  sort: function sort() {},
  onSelected: _noop2.default,
  onDelete: _noop2.default,
  onChange: _noop2.default
});
var _default = Autosuggest;
exports.default = _default;