"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _miniStore = require("../../../utils/mini-store");

var _ExpandIcon = _interopRequireDefault(require("./ExpandIcon"));

var ExpandableRow =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(ExpandableRow, _Component);

  function ExpandableRow() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2.default)(this, ExpandableRow);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ExpandableRow)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "hasExpandIcon", function (columnIndex) {
      var expandRowByClick = _this.props.expandRowByClick;
      return !_this.expandIconAsCell && !expandRowByClick && columnIndex === _this.expandIconColumnIndex;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleExpandChange", function (record, event) {
      var _this$props = _this.props,
          onExpandedChange = _this$props.onExpandedChange,
          expanded = _this$props.expanded,
          rowKey = _this$props.rowKey;

      if (_this.expandable) {
        onExpandedChange(!expanded, record, event, rowKey);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleDestroy", function () {
      var _this$props2 = _this.props,
          onExpandedChange = _this$props2.onExpandedChange,
          rowKey = _this$props2.rowKey,
          record = _this$props2.record;

      if (_this.expandable) {
        onExpandedChange(false, record, null, rowKey, true);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleRowClick", function (record, index, event) {
      var _this$props3 = _this.props,
          expandRowByClick = _this$props3.expandRowByClick,
          onRowClick = _this$props3.onRowClick;

      if (expandRowByClick) {
        _this.handleExpandChange(record, event);
      }

      if (onRowClick) {
        onRowClick(record, index, event);
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderExpandIcon", function () {
      var _this$props4 = _this.props,
          prefixCls = _this$props4.prefixCls,
          expanded = _this$props4.expanded,
          record = _this$props4.record,
          needIndentSpaced = _this$props4.needIndentSpaced,
          expandIcon = _this$props4.expandIcon,
          expandIcons = _this$props4.expandIcons;

      if (expandIcon) {
        return expandIcon({
          prefixCls: prefixCls,
          expanded: expanded,
          record: record,
          needIndentSpaced: needIndentSpaced,
          expandable: _this.expandable,
          onExpand: _this.handleExpandChange
        });
      }

      return _react.default.createElement(_ExpandIcon.default, {
        expandable: _this.expandable,
        prefixCls: prefixCls,
        onExpand: _this.handleExpandChange,
        needIndentSpaced: needIndentSpaced,
        expanded: expanded,
        record: record,
        expandIcons: expandIcons
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "renderExpandIconCell", function (cells) {
      if (!_this.expandIconAsCell) {
        return;
      }

      var prefixCls = _this.props.prefixCls;

      var expandCell = _react.default.createElement("td", {
        className: "".concat(prefixCls, "-expand-icon-cell"),
        key: "rc-table-expand-icon-cell"
      }, _this.renderExpandIcon());

      cells.push(expandCell);
    });
    return _this;
  }

  (0, _createClass2.default)(ExpandableRow, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.handleDestroy();
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props5 = this.props,
          childrenColumnName = _this$props5.childrenColumnName,
          expandedRowRender = _this$props5.expandedRowRender,
          indentSize = _this$props5.indentSize,
          record = _this$props5.record,
          fixed = _this$props5.fixed,
          expanded = _this$props5.expanded,
          expandIconAsCell = _this$props5.expandIconAsCell,
          expandIconColumnIndex = _this$props5.expandIconColumnIndex,
          children = _this$props5.children;
      this.expandIconAsCell = fixed !== 'right' ? expandIconAsCell : false;
      this.expandIconColumnIndex = fixed !== 'right' ? expandIconColumnIndex : -1;
      var childrenData = record[childrenColumnName];
      var hasChild = expandedRowRender && expandedRowRender(record) !== null;
      this.expandable = !!(childrenData || hasChild);
      var expandableRowProps = {
        indentSize: indentSize,
        expanded: expanded,
        onRowClick: this.handleRowClick,
        hasExpandIcon: this.hasExpandIcon,
        renderExpandIcon: this.renderExpandIcon,
        renderExpandIconCell: this.renderExpandIconCell
      };
      return children(expandableRowProps);
    }
  }]);
  return ExpandableRow;
}(_react.Component);

(0, _defineProperty2.default)(ExpandableRow, "propTypes", {
  prefixCls: _propTypes.default.string.isRequired,
  rowKey: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]).isRequired,
  fixed: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),
  record: _propTypes.default.object.isRequired,
  indentSize: _propTypes.default.number,
  needIndentSpaced: _propTypes.default.bool.isRequired,
  expandRowByClick: _propTypes.default.bool,
  expanded: _propTypes.default.bool.isRequired,
  expandIconAsCell: _propTypes.default.bool,
  expandIcons: _propTypes.default.array,
  expandIconColumnIndex: _propTypes.default.number,
  childrenColumnName: _propTypes.default.string,
  expandedRowRender: _propTypes.default.func,
  expandIcon: _propTypes.default.func,
  onExpandedChange: _propTypes.default.func.isRequired,
  onRowClick: _propTypes.default.func,
  children: _propTypes.default.func.isRequired
});

var _default = (0, _miniStore.connect)(function (_ref, _ref2) {
  var expandedRowKeys = _ref.expandedRowKeys;
  var rowKey = _ref2.rowKey;
  return {
    expanded: expandedRowKeys.indexOf(rowKey) !== -1
  };
})(ExpandableRow);

exports.default = _default;