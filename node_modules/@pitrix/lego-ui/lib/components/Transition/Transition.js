"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _get2 = _interopRequireDefault(require("lodash/get"));

var _isFunction2 = _interopRequireDefault(require("lodash/isFunction"));

var _includes2 = _interopRequireDefault(require("lodash/includes"));

var _react = require("react");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _transitionUtils = require("./transitionUtils");

var Transition =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(Transition, _Component);

  function Transition(_props) {
    var _this;

    (0, _classCallCheck2.default)(this, Transition);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Transition).call(this, _props));
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "setSafeState", function () {
      var _this2;

      return _this.mounted && (_this2 = _this).setState.apply(_this2, arguments);
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleStart", function () {
      var _this$props = _this.props,
          duration = _this$props.duration,
          onStart = _this$props.onStart;
      var status = _this.nextStatus;
      _this.nextStatus = null;

      _this.setSafeState({
        status: status,
        animating: true
      }, function () {
        var durationType = _transitionUtils.TRANSITION_TYPE[status];
        var durationValue = (0, _transitionUtils.normalizeTransitionDuration)(duration, durationType);

        if ((0, _isFunction2.default)(onStart)) {
          onStart((0, _objectSpread2.default)({}, _this.props, {
            status: status
          }));
        }

        setTimeout(_this.handleComplete, durationValue);
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleComplete", function () {
      var current = _this.state.status;
      var _this$props2 = _this.props,
          onComplete = _this$props2.onComplete,
          onShow = _this$props2.onShow,
          onHide = _this$props2.onHide;

      if ((0, _isFunction2.default)(onComplete)) {
        onComplete((0, _objectSpread2.default)({}, _this.props, {
          status: current
        }));
      }

      if (_this.nextStatus) {
        _this.handleStart();

        return;
      }

      var status = _this.computeCompletedStatus();

      var callback = current === Transition.ENTERING ? onShow : onHide;

      _this.setSafeState({
        status: status,
        animating: false
      }, function () {
        if ((0, _isFunction2.default)(callback)) {
          callback((0, _objectSpread2.default)({}, _this.props, {
            status: status
          }));
        }
      });
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "updateStatus", function () {
      var animating = _this.state.animating;

      if (_this.nextStatus) {
        _this.nextStatus = _this.computeNextStatus();
        if (!animating) _this.handleStart();
      }
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "computeClasses", function () {
      var _this$props3 = _this.props,
          animation = _this$props3.animation,
          children = _this$props3.children;
      var _this$state = _this.state,
          animating = _this$state.animating,
          status = _this$state.status;
      var childClasses = (0, _get2.default)(children, 'props.className');
      var directional = (0, _includes2.default)(_transitionUtils.DIRECTIONAL_TRANSITIONS, animation);

      var useKeyOnly = function useKeyOnly(val, key) {
        return val && key;
      };

      if (directional) {
        return (0, _classnames.default)(animation, childClasses, useKeyOnly(animating, 'animating'), useKeyOnly(status === Transition.ENTERING, 'in'), useKeyOnly(status === Transition.EXITING, 'out'), useKeyOnly(status === Transition.EXITED, 'hidden'), useKeyOnly(status !== Transition.EXITED, 'visible'), 'transition');
      }

      return (0, _classnames.default)(animation, childClasses, useKeyOnly(animating, 'animating transition'));
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "computeCompletedStatus", function () {
      var unmountOnHide = _this.props.unmountOnHide;
      var status = _this.state.status;
      if (status === Transition.ENTERING) return Transition.ENTERED;
      return unmountOnHide ? Transition.UNMOUNTED : Transition.EXITED;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "computeInitialStatuses", function () {
      var _this$props4 = _this.props,
          visible = _this$props4.visible,
          mountOnShow = _this$props4.mountOnShow,
          transitionOnMount = _this$props4.transitionOnMount,
          unmountOnHide = _this$props4.unmountOnHide;

      if (visible) {
        if (transitionOnMount) {
          return {
            initial: Transition.EXITED,
            next: Transition.ENTERING
          };
        }

        return {
          initial: Transition.ENTERED
        };
      }

      if (mountOnShow || unmountOnHide) return {
        initial: Transition.UNMOUNTED
      };
      return {
        initial: Transition.EXITED
      };
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "computeNextStatus", function () {
      var _this$state2 = _this.state,
          animating = _this$state2.animating,
          status = _this$state2.status;
      if (animating) return status === Transition.ENTERING ? Transition.EXITING : Transition.ENTERING;
      return status === Transition.ENTERED ? Transition.EXITING : Transition.ENTERING;
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "computeStatuses", function (props) {
      var status = _this.state.status;
      var visible = props.visible;

      if (visible) {
        return {
          current: status === Transition.UNMOUNTED && Transition.EXITED,
          next: status !== Transition.ENTERING && status !== Transition.ENTERED && Transition.ENTERING
        };
      }

      return {
        next: (status === Transition.ENTERING || status === Transition.ENTERED) && Transition.EXITING
      };
    });
    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "computeStyle", function () {
      var _this$props5 = _this.props,
          children = _this$props5.children,
          duration = _this$props5.duration;
      var status = _this.state.status;
      var childStyle = (0, _get2.default)(children, 'props.style');
      var type = _transitionUtils.TRANSITION_TYPE[status];
      var animationDuration = type && "".concat((0, _transitionUtils.normalizeTransitionDuration)(duration, type), "ms");
      return (0, _objectSpread2.default)({}, childStyle, {
        animationDuration: animationDuration
      });
    });

    var _this$computeInitialS = _this.computeInitialStatuses(),
        _status = _this$computeInitialS.initial,
        next = _this$computeInitialS.next;

    _this.nextStatus = next;
    _this.state = {
      status: _status
    };
    return _this;
  }

  (0, _createClass2.default)(Transition, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.mounted = true;
      this.updateStatus();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      var _this$computeStatuses = this.computeStatuses(this.props),
          status = _this$computeStatuses.current,
          next = _this$computeStatuses.next;

      if (status) this.setSafeState({
        status: status
      });
      this.nextStatus = next;
      this.updateStatus();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.mounted = false;
    }
  }, {
    key: "render",
    value: function render() {
      var children = this.props.children;
      var status = this.state.status;
      if (status === Transition.UNMOUNTED) return null;
      return (0, _react.cloneElement)(children, {
        className: this.computeClasses(),
        style: this.computeStyle()
      });
    }
  }]);
  return Transition;
}(_react.Component);

(0, _defineProperty2.default)(Transition, "ENTERED", 'ENTERED');
(0, _defineProperty2.default)(Transition, "ENTERING", 'ENTERING');
(0, _defineProperty2.default)(Transition, "EXITED", 'EXITED');
(0, _defineProperty2.default)(Transition, "EXITING", 'EXITING');
(0, _defineProperty2.default)(Transition, "UNMOUNTED", 'UNMOUNTED');
(0, _defineProperty2.default)(Transition, "propTypes", {
  animation: _propTypes.default.oneOf(_transitionUtils.TRANSITIONS),
  children: _propTypes.default.element.isRequired,
  duration: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({
    hide: _propTypes.default.number,
    show: _propTypes.default.number
  }), _propTypes.default.string]),
  visible: _propTypes.default.bool,
  mountOnShow: _propTypes.default.bool,
  onComplete: _propTypes.default.func,
  onHide: _propTypes.default.func,
  onShow: _propTypes.default.func,
  onStart: _propTypes.default.func,
  transitionOnMount: _propTypes.default.bool,
  unmountOnHide: _propTypes.default.bool
});
(0, _defineProperty2.default)(Transition, "defaultProps", {
  animation: 'fade',
  duration: 500,
  visible: true,
  mountOnShow: true,
  transitionOnMount: false,
  unmountOnHide: false
});
var _default = Transition;
exports.default = _default;