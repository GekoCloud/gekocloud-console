"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.as = exports.mergeChildMappings = exports.getPendingKeys = exports.getValue = exports.getUnhandledProps = exports.getElementType = exports.getChildMapping = exports.normalizeTransitionDuration = exports.TRANSITION_TYPE = exports.TRANSITIONS = exports.STATIC_TRANSITIONS = exports.DIRECTIONAL_TRANSITIONS = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _keys2 = _interopRequireDefault(require("lodash/keys"));

var _omit2 = _interopRequireDefault(require("lodash/omit"));

var _has2 = _interopRequireDefault(require("lodash/has"));

var _forEach2 = _interopRequireDefault(require("lodash/forEach"));

var _filter2 = _interopRequireDefault(require("lodash/filter"));

var _keyBy2 = _interopRequireDefault(require("lodash/keyBy"));

var _react = require("react");

var _propTypes = _interopRequireDefault(require("prop-types"));

var DIRECTIONAL_TRANSITIONS = ['browse', 'browse right', 'drop', 'fade', 'fade up', 'fade down', 'fade left', 'fade right', 'fly up', 'fly down', 'fly left', 'fly right', 'horizontal flip', 'vertical flip', 'scale', 'slide up', 'slide down', 'slide left', 'slide right', 'swing up', 'swing down', 'swing left', 'swing right'];
exports.DIRECTIONAL_TRANSITIONS = DIRECTIONAL_TRANSITIONS;
var STATIC_TRANSITIONS = ['jiggle', 'flash', 'shake', 'pulse', 'tada', 'bounce'];
exports.STATIC_TRANSITIONS = STATIC_TRANSITIONS;
var TRANSITIONS = [].concat(DIRECTIONAL_TRANSITIONS, STATIC_TRANSITIONS);
exports.TRANSITIONS = TRANSITIONS;
var TRANSITION_TYPE = {
  ENTERING: 'show',
  EXITING: 'hide'
};
exports.TRANSITION_TYPE = TRANSITION_TYPE;

var normalizeTransitionDuration = function normalizeTransitionDuration(duration, type) {
  return typeof duration === 'number' || typeof duration === 'string' ? duration : duration[type];
};

exports.normalizeTransitionDuration = normalizeTransitionDuration;

var getChildMapping = function getChildMapping(children) {
  return (0, _keyBy2.default)((0, _filter2.default)(_react.Children.toArray(children), _react.isValidElement), 'key');
};

exports.getChildMapping = getChildMapping;

var getElementType = function getElementType(Component, props, getDefault) {
  var _Component$defaultPro = Component.defaultProps,
      defaultProps = _Component$defaultPro === void 0 ? {} : _Component$defaultPro;
  if (props.as === 'none') return null;
  if (props.as && props.as !== defaultProps.as) return props.as;

  if (getDefault) {
    var computedDefault = getDefault();
    if (computedDefault) return computedDefault;
  }

  if (props.href) return 'a';
  return defaultProps.as || 'div';
};

exports.getElementType = getElementType;

var getUnhandledProps = function getUnhandledProps(Component, props) {
  var _Component$handledPro = Component.handledProps,
      handledProps = _Component$handledPro === void 0 ? [] : _Component$handledPro;
  var newProps = Object.keys(props).reduce(function (acc, prop) {
    if (prop === 'childKey') return acc;
    if (handledProps.indexOf(prop) === -1) acc[prop] = props[prop];
    return acc;
  }, {});
  return (0, _omit2.default)(newProps, 'as', 'duration', 'animation');
};

exports.getUnhandledProps = getUnhandledProps;

var getValue = function getValue(key, prev, next) {
  return (0, _has2.default)(next, key) ? next[key] : prev[key];
};

exports.getValue = getValue;

var getPendingKeys = function getPendingKeys(prev, next) {
  var nextKeysPending = {};
  var pendingKeys = [];
  (0, _forEach2.default)((0, _keys2.default)(prev), function (prevKey) {
    if (!(0, _has2.default)(next, prevKey)) {
      pendingKeys.push(prevKey);
      return;
    }

    if (pendingKeys.length) {
      nextKeysPending[prevKey] = pendingKeys;
      pendingKeys = [];
    }
  });
  return [nextKeysPending, pendingKeys];
};

exports.getPendingKeys = getPendingKeys;

var mergeChildMappings = function mergeChildMappings() {
  var prev = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var next = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var childMapping = {};

  var _getPendingKeys = getPendingKeys(prev, next),
      _getPendingKeys2 = (0, _slicedToArray2.default)(_getPendingKeys, 2),
      nextKeysPending = _getPendingKeys2[0],
      pendingKeys = _getPendingKeys2[1];

  (0, _forEach2.default)((0, _keys2.default)(next), function (nextKey) {
    if ((0, _has2.default)(nextKeysPending, nextKey)) {
      (0, _forEach2.default)(nextKeysPending[nextKey], function (pendingKey) {
        childMapping[pendingKey] = getValue(pendingKey, prev, next);
      });
    }

    childMapping[nextKey] = getValue(nextKey, prev, next);
  });
  (0, _forEach2.default)(pendingKeys, function (pendingKey) {
    childMapping[pendingKey] = getValue(pendingKey, prev, next);
  });
  return childMapping;
};

exports.mergeChildMappings = mergeChildMappings;

var as = function as() {
  var types = _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.string, _propTypes.default.symbol]);

  return types.apply(void 0, arguments);
};

exports.as = as;