"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _hoistNonReactStatics = _interopRequireDefault(require("hoist-non-react-statics"));

var _shallowEqual = _interopRequireDefault(require("../shallowEqual"));

var _PropTypes = _interopRequireDefault(require("./PropTypes"));

var getDisplayName = function getDisplayName(WrappedComponent) {
  return WrappedComponent.displayName || WrappedComponent.name || 'Component';
};

var isStateless = function isStateless(component) {
  return !component.prototype.render;
};

var defaultMapStateToProps = function defaultMapStateToProps() {
  return {};
};

var connect = function connect(mapStateToProps) {
  var shouldSubscribe = !!mapStateToProps;
  var finalMapStateToProps = mapStateToProps || defaultMapStateToProps;
  return function wrapWithConnect(WrappedComponent) {
    var Connect =
    /*#__PURE__*/
    function (_Component) {
      (0, _inherits2.default)(Connect, _Component);
      (0, _createClass2.default)(Connect, null, [{
        key: "getDerivedStateFromProps",
        value: function getDerivedStateFromProps(props, prevState) {
          if (mapStateToProps && mapStateToProps.length === 2 && props !== prevState.props) {
            return {
              subscribed: finalMapStateToProps(prevState.store.getState(), props),
              props: props
            };
          }

          return {
            props: props
          };
        }
      }]);

      function Connect(props, context) {
        var _this;

        (0, _classCallCheck2.default)(this, Connect);
        _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Connect).call(this, props, context));
        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), "handleChange", function () {
          if (!_this.unsubscribe) {
            return;
          }

          var nextState = finalMapStateToProps(_this.store.getState(), _this.props);

          _this.setState({
            subscribed: nextState
          });
        });
        _this.store = context.miniStore;
        _this.state = {
          subscribed: finalMapStateToProps(_this.store.getState(), props),
          store: _this.store,
          props: props
        };
        return _this;
      }

      (0, _createClass2.default)(Connect, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.trySubscribe();
        }
      }, {
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(nextProps, nextState) {
          var subscribed = this.state.subscribed;
          return !(0, _shallowEqual.default)(this.props, nextProps) || !(0, _shallowEqual.default)(subscribed, nextState.subscribed);
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this.tryUnsubscribe();
        }
      }, {
        key: "getWrappedInstance",
        value: function getWrappedInstance() {
          return this.wrappedInstance;
        }
      }, {
        key: "tryUnsubscribe",
        value: function tryUnsubscribe() {
          if (this.unsubscribe) {
            this.unsubscribe();
            this.unsubscribe = null;
          }
        }
      }, {
        key: "trySubscribe",
        value: function trySubscribe() {
          if (shouldSubscribe) {
            this.unsubscribe = this.store.subscribe(this.handleChange);
            this.handleChange();
          }
        }
      }, {
        key: "render",
        value: function render() {
          var _this2 = this;

          var subscribed = this.state.subscribed;
          var props = (0, _objectSpread2.default)({}, this.props, subscribed, {
            store: this.store
          });

          if (!isStateless(WrappedComponent)) {
            props = (0, _objectSpread2.default)({}, props, {
              ref: function ref(c) {
                _this2.wrappedInstance = c;
              }
            });
          }

          return _react.default.createElement(WrappedComponent, props);
        }
      }]);
      return Connect;
    }(_react.Component);

    (0, _defineProperty2.default)(Connect, "displayName", "Connect(".concat(getDisplayName(WrappedComponent), ")"));
    (0, _defineProperty2.default)(Connect, "contextTypes", {
      miniStore: _PropTypes.default.isRequired
    });
    return (0, _hoistNonReactStatics.default)(Connect, WrappedComponent);
  };
};

var _default = connect;
exports.default = _default;